{"version":3,"sources":["Bank/Global.js","Bank/Modal/styled.js","Bank/Modal/index.jsx","Bank/enums.js","Bank/Shared/Layout.jsx","Bank/context.js","Bank/ActivityChooser/ActivityListing.jsx","Bank/ActivityChooser/index.jsx","Bank/introOutroCopy.js","Bank/IntroOutro/index.jsx","Bank/Activities/SignIn/index.jsx","Bank/Activities/AccountOverview/index.jsx","Bank/Activities/MakingPayments/index.jsx","Bank/Activities/CreatingAccount/index.jsx","Bank/Activities/TransferFunds/index.jsx","Bank/Activities/ETransfer/index.jsx","Bank/Activities/index.js","Bank/Shared/Tip/index.jsx","Bank/BankPages/BankPageElements.jsx","Bank/BankPages/BankHomepage/BankHomepage.jsx","Bank/BankPages/BankHomepage/SignIn.jsx","Bank/Shared/Components.jsx","Bank/BankPages/BankHomepage/AccountRegistration.jsx","Bank/BankPages/BankHomepage/Welcome.jsx","Bank/BankPages/BankHomepage/PhoneVerification.jsx","Bank/BankPages/BankHomepage/CreateEmail.jsx","Bank/BankPages/BankHomepage/index.jsx","Bank/NotFound.jsx","Bank/BankPages/Accounts/AllAccounts.jsx","Bank/BankPages/Accounts/Checking/CheckingInfo.jsx","Bank/BankPages/Accounts/Checking/CheckingTransactions.jsx","Bank/BankPages/Accounts/CheckingHome.jsx","Bank/BankPages/Accounts/SavingsHome.jsx","Bank/BankPages/Accounts/TransferFunds.jsx","Bank/BankPages/PaymentMethods.jsx","Bank/BankPages/BankingFooter.jsx","Bank/BankPages/BaseBankPage.jsx","Bank/BankPages/Payments/PaymentsHome.jsx","Bank/BankPages/Payments/ListOfPayees.jsx","Bank/BankPages/Payments/AddPayee.jsx","Bank/BankPages/Payments/VerifyPayee.jsx","Bank/BankPages/Payments/shared.jsx","Bank/BankPages/Payments/AddBill.jsx","Bank/BankPages/Payments/VerifyBill.jsx","Bank/BankPages/ETransfer/AddContact.jsx","Bank/BankPages/ETransfer/Contacts.jsx","Bank/BankPages/ETransfer/SendETransfer.jsx","Bank/BankPages/ETransfer/VerifyETransfer.jsx","Bank/BankPages/Accounts/Savings/SavingsInfo.jsx","Bank/BankPages/Accounts/Savings/SavingsTransactions.jsx","Bank/routes.jsx","Bank/index.jsx","serviceWorker.js","index.js","Bank/assets/dark_flake.png","Bank/assets/dark_flake_black.png","Bank/assets/contract.png","Bank/assets/piggy-bank.png","Bank/assets/exchange.png","Bank/assets/coin.png","Bank/assets/plus.png"],"names":["bps","mq","map","bp","mqMin","mqO","facepaint","theme","colors","ylc_blue","bank_blue","text","light_accent","medium_accent","lighter_grey","medium_grey","faded_text","zIndex","first","second","third","fourth","top","fonts","big_header","css","fontSize","medium_header","small_header","extra_small_header","body_text","body_text_bold","small_body_text","large_button_text","small_button_text","StyledModalOverlay","styled","div","ModalWrapper","p","props","visible","fullScreen","floating","ContentContainer","ResponsiveContent","children","ModalOverlay","notOverlayCloseable","closeModal","render","onClick","CARDNUM","REGISTEREMAIL","LANDLORDEMAIL","SECRETQ","activitiesEnums","bankPageEnums","accountPagesEnums","ACCOUNTS","CHECKINGHOME","CHECKINGINFO","CHECKINGTRANSACTIONS","SAVINGSHOME","SAVINGSINFO","SAVINGSTRANSACTIONS","TRANSFERFUNDS","paymentPagesEnums","eTransferPagesEnums","signInEnums","signInSteps","createEnums","createSteps","overviewEnums","overviewSteps","makingPaymentsEnums","clickPayments","billPaymentsStep","addEditPayee","addCompanyName","addBillNumber","goToVerify","confirmPayee","chooseTaco","chooseDebitAccount","enterAmount","enterDate","reviewBillPayment","confirmBillPayment","makingPaymentsSteps","transferFundsEnums","transferFundsSteps","eTransferEnums","clickPayTransfer","chooseETransfer","addNewContact","enterName","enterEmail","addContact","chooseNewContact","chooseAccount","chooseSecurityQuestion","enterQuestionAnswer","reEnterAnswer","addMessage","goToSummary","reviewSummary","clickSend","eTransferSteps","PageContainer","MarginedContainer","ActButton","button","disabled","AllActivitiesButton","SignInButton","background","color","ButtonContainer","NeutralBankingButton","IntroModalContext","createContext","introModalState","isVisible","isIntro","setIntroContext","ActivityModalContext","activityModalIsVisible","setActivityContext","paymentMethodsIsVisible","setPaymentMethodsContext","ActSectionHeader","h2","ActWrapper","ActTitle","span","activity","useContext","navigate","useNavigate","console","log","Activity","title","ActivityList","LargerSpace","ActChooserBody","Welcome","Intro","IntroContent","BlueSpan","Choose","LogoContainer","HeaderLogo","img","ActivityChooser","ActivityHeader","src","logo","alt","intro","outro","IntroOutroContainer","TextSection","ButtonSection","IntroOutro","copy","useParams","introOutroCopy","SignIn","Overview","MakingPayments","CreatingAccount","TransferFunds","ETransfer","AccountOverview","ContentSpan","PlacedElement","maxHeight","BasicTooltip","content","showTip","triggerOffset","staticOnly","preferX","placement","noScroll","tipContentStyles","showArrow","useHover","isOver","hoverProps","useEffect","scroller","scrollTo","smooth","offset","useLayer","isOpen","delayEnter","delayLeave","auto","containerOffset","arrowOffset","triggerProps","layerProps","arrowProps","renderLayer","id","name","initial","opacity","animate","exit","transition","duration","className","style","borderWidth","borderColor","borderStyle","backgroundColor","borderRadius","maxWidth","roundness","size","angle","BasicTipButton","InfoTip","tipContent","tipTarget","showButton","buttonDisabled","setStep","rest","Content","SubTitle","StyledInput","input","Space","BoldDiv","Logo","BankingBackgroundContainer","BankingColor","BankingBackground","BankLogoDiv","left","LogoImg","LogoTagWrapper","BankingLogo","NewStyle","blackLogo","TagContainer","BankingTag","ColoredDiv","HeaderWrapper","BankingHeader","SmallContainer","CleanBackground","BankingContainer","TransDetailsSection","TransButton","isActive","TransactionsDetails","stepIndex","location","useLocation","isDetails","pathname","split","some","e","includes","isTransactions","isTransferFunds","isOverview","isGoToSavingsTransactions","isToChequingTransactionsFinalTransfer","SpecifiedTransButton","Number","OverviewTransactionsTip","TransferSavingsTip","ItemListingWrapper","isSummary","separateDetails","ItemTextContainer","ItemPrincipalText","ItemSubTextContainer","lowercase","ItemDate","ItemTransaction","ItemDetails","isPositive","ItemListing","principal","date","trans","details","TransactionSubtitle","BillPayeeInput","BillPayeeReview","ContinueButton","ContinueButtonContainer","BankHeader","StyledNumberFormat","NumberFormat","centerText","StyledTextInput","width","LabelInputContainer","StyledSelect","select","OldStyledSelect","StyledLabel","label","InputContainer","BillPaymentsContainer","InnerContainer","OuterContainer","FormContainer","subtitle","BankHomepage","PasswordLabel","RadioInputContainer","FullSpan","useState","undefined","cardNumber","setCardNumber","password","setPassword","saveToggled","setSaveToggled","isSignIn","overflow","htmlFor","onChange","target","value","format","placeholder","type","checked","AccountRegistration","isEnterCard","isPhone","isAfterPhone","phoneNumber","setPhoneNumber","StyledSignInWrapper","isCreateAccount","PhoneVerification","verifCode","setVerifCode","isVerifStep","CreateEmail","isEnterEmailStep","isEnterPWStep","email","setEmail","passwordTwo","setPasswordTwo","indexOf","NotFound","StyledAccountBlock","AccountInfo","BankAccounts","AccountTitle","AccountNumber","AccountBalance","TransferContainer","AllAccountsContainer","AccountBlock","balance","accNumber","AllAccounts","isIncreasedSavingsBalance","chequingBalance","savingsBalance","isOverviewCheck","isTransferFinalReview","AccountInformation","FullEmptyDiv","Date","toLocaleDateString","month","day","year","todayDate","Transactions","isTransferFinal","CheckingSectionWrapper","CheckingHeaderContainer","CheckingHeader","NotedBalance","CheckingHeaderInfo","CheckingHome","AccountSectionWrapper","AccountHeaderContainer","AccountHeader","AccountHeaderInfo","SavingsHome","fromAcc","setFromAcc","toAcc","setToAcc","payAmt","setPayAmt","transferType","setTransferType","is","enumStep","isSelectCheqing","isSelectSavings","isEnterAmount","isTransferType","isConfirmTransfer","hidden","prefix","TransactionsContainer","BankingButton","PaymentMethods","setPaymentMethodsVisible","setMainPage","billPaymentsPage","isMakingPayments","isEtransferStep","isBillPayments","transferIcon","payBillIcon","interacIcon","depositIcon","StyledBankingFooter","FooterLink","BankingFooter","isEtransfer","isMakingPaymentsStep","isTransferFundsStepHome","isTransferFundsStepPayTransfer","SpecificFooterLink","PayTransferTip","BasePage","paymentMethodsOpen","setPaymentMethodsOpen","PaymentsHome","accountType","setAccountType","billAmount","setBillAmount","days","result","setDate","getDate","addDays","billDate","setBillDate","context","PayeeControlsContainer","ChooseText","AddPayeeButton","ListOfPayees","isAddEditPayee","isChooseTaco","isTacoAdded","AddPayee","companyTitle","setCompanyTitle","inputedAccountNumber","setInputedAccountNumber","isAddCompanyName","isAddBillNumber","isGoToVerify","VerifyPayee","isConfirmPayee","getFormattedBillDate","bMonth","bDay","bYear","StyledDatePicker","DatePicker","DateContainer","LightOption","option","AddBill","useOutletContext","isPay","isChooseDebitAccount","isEnterDate","isReview","selected","todayButton","VerifyBill","isConfirmBillPayment","AddContact","inputName","setInputName","inputEmail","setInputEmail","enumType","isEnterName","isEnterEmail","isAddContact","AddContactContainer","PlusContainer","AddContactText","plus","Contacts","isAddNewContact","isSelectNewContact","isNewContact","SendETransfer","secretQInput","setSecretQ","secretAInput","setSecretA","answer2","setAnswer2","messageInput","setMessage","isChooseAccount","isChooseSecurityQ","isEnterSecurityA","isReenterA","isAddMessage","isGoToSummary","addPersonalInfo","VerifyETransfer","isSend","SavingsInfo","SavingsTransactions","isConfirmIncrease","Act","AllActivities","AllRoutes","path","element","CheckingInfo","CheckingTransactions","App","GlobalStyle","createGlobalStyle","AppExport","introContextValue","activityContextValue","Provider","Boolean","window","hostname","match","ReactDOM","StrictMode","Bank","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.af8bf60d.chunk.js","sourcesContent":["import { css } from \"styled-components\";\nimport facepaint from \"facepaint\";\n\nexport const bps = [\"400\", \"600\", \"800\", \"1060\"];\n\nexport const mq = bps.map((bp) => `@media (max-width: ${bp}px)`);\nexport const mqMin = bps.map((bp) => `@media (min-width: ${bp}px)`);\n\nexport const mqO = facepaint([\n  `@media(max-width: ${bps[3]}px)`,\n  `@media(max-width: ${bps[2]}px)`,\n  `@media(max-width: ${bps[1]}px)`,\n  `@media(max-width: ${bps[0]}px)`,\n]);\n\nexport const mqNew = (bp) => `@media (max-width: ${bp}px)`;\n\nexport const theme = {\n  colors: {\n    ylc_blue: \"#2F3575\",\n    bank_blue: \"#2E71B2\",\n    text: \"#02111B\",\n    light_accent: \"#EBF2FA\",\n    medium_accent: \"#B4CDED\",\n    lighter_grey: \"#FDFDFD\",\n    medium_grey: \"#EFEFEF\",\n    faded_text: \"#B3B7BA\",\n  },\n  zIndex: {\n    first: 10,\n    second: 20,\n    third: 30,\n    fourth: 40,\n    top: 50,\n  },\n  fonts: {\n    big_header: css`\n      font-family: Poppins;\n      font-weight: bolder;\n      ${mqO({\n        fontSize: [\"75px\", null, \"60px\", \"40px\", null],\n      })}\n    `,\n    medium_header: css`\n      font-family: Poppins;\n      font-weight: bold;\n      ${mqO({\n        fontSize: [\"36px\", null, null, \"25px\", null],\n      })}\n    `,\n    small_header: css`\n      font-size: 24px;\n      font-family: Poppins;\n      font-weight: bold;\n    `,\n    extra_small_header: css`\n      font-size: 20px;\n      font-family: Poppins;\n      font-weight: bold;\n    `,\n    body_text: css`\n      font-size: 16px;\n      font-family: Noto Sans;\n      ${mq[2]} {\n        font-size: 14px;\n      }\n    `,\n    body_text_bold: css`\n      font-size: 16px;\n      font-family: Noto Sans;\n      font-weight: bold;\n      ${mq[3]} {\n        font-size: 14px;\n      }\n      ${mq[2]} {\n        font-size: 14px;\n      }\n    `,\n    small_body_text: css`\n      font-size: 12px;\n      font-family: Noto Sans;\n      ${mq[2]} {\n        font-size: 10px;\n      }\n    `,\n    large_button_text: css`\n      font-size: 14px;\n      font-family: Poppins;\n      font-weight: bold;\n    `,\n    small_button_text: css`\n      font-size: 12px;\n      font-family: Poppins;\n      font-weight: bold;\n    `,\n  },\n};\n","import styled, { css } from \"styled-components\";\nimport { mqMin } from \"../Global\";\n\nexport const StyledModalOverlay = styled.div`\n  position: absolute;\n  background: rgba(0, 0, 0, 0.5);\n  height: 100vh;\n  width: 100vw;\n  z-index: -1;\n`;\nexport const ModalWrapper = styled.div`\n  height: 100vh;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: ${(p) => (p.zIndex ? p.zIndex : 100000)};\n  display: ${(props) => (props.visible ? \"flex\" : \"none\")};\n  justify-content: center;\n  align-items: center;\n`;\n\nconst fullScreen = css`\n  width: 100vw;\n  height: 100vh;\n  overflow-y: auto;\n  background: white;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst floating = css`\n  width: calc(100% - 100px);\n  max-width: 800px;\n  height: unset;\n  max-height: calc(100% - 150px);\n  /* max-height: 71rem; */\n  position: relative;\n  overflow-y: auto;\n  background: white;\n  box-shadow: 0 2px 24px 0 rgba(0, 0, 0, 0.5);\n  border: ${(p) => p.theme.colors.ylc_blue} solid 3px;\n  border-radius: 5px;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContentContainer = styled.div`\n  ${fullScreen}\n  ${mqMin[2]} {\n    ${floating}\n  }\n`;\n","import React from \"react\";\nimport { ContentContainer, StyledModalOverlay, ModalWrapper } from \"./styled\";\n\nexport const ResponsiveContent = ({ children }) => (\n  <ContentContainer>{children}</ContentContainer>\n);\n\nexport const ModalOverlay = (props) => {\n  const { notOverlayCloseable, visible, closeModal } = props;\n\n  const handleOverlayClick = () => {\n    if (!notOverlayCloseable) {\n      closeModal();\n    }\n  };\n\n  return (\n    <ModalWrapper {...props} visible={visible}>\n      {props.render({ ...props })}\n      <StyledModalOverlay onClick={handleOverlayClick} />\n    </ModalWrapper>\n  );\n};\n","// REGISTER\nexport const CARDNUM = \"1234 5678 9098 7654\";\nexport const PHONENUM = \"867-123-4567\";\nexport const VERIFCODE = \"0987\";\nexport const REGISTEREMAIL = \"iloveliteracy@email.com\";\nexport const REGISTERPW = \"literacy1234\";\n\n//OTHER\nexport const TACOTITLE = \"Taco Electric\";\nexport const ACCOUNTNUMBER = \"1234567\";\nexport const CHEQUINGACCOUNT = \"Chequing\";\nexport const SAVINGSACCOUNT = \"Savings\";\nexport const BILLAMOUNT = \"68.00\";\n\n// TRANSFER FUNDS\nexport const TRANSFERTYPE = \"One-Time\";\n\n// ETRANSFER SPECIFIC\nexport const LANDLORDNAME = \"Landlord John\";\nexport const LANDLORDEMAIL = \"mylandlordjohn@email.com\";\nexport const LANDLORDAMT = \"$500\";\nexport const SECRETQ = \"what is my dogs name\";\nexport const SECRETA = \"Buster\";\nexport const EXTRAMESSAGE = \"April Rent\";\n\n// ACTIVITIES\nexport const activitiesEnums = {\n  TRANSFERFUNDS: \"TransferFunds\",\n  ETRANSFER: \"ETransfer\",\n  CREATINGACCOUNT: \"CreatingAccount\",\n  SIGNIN: \"SignIn\",\n  ACCOUNTOVERVIEW: \"AccountOverview\",\n  MAKINGPAYMENTS: \"MakingPayments\",\n};\n\n// PAGES\nexport const bankPageEnums = {\n  BANKHOMEPAGE: \"BankHomepage\",\n  SIGNIN: \"SignIn\",\n  ACCOUNTREGISTRATION: \"AccountRegistration\",\n  PHONEVERIFICATION: \"PhoneVerification\",\n  CREATEEMAIL: \"CreateEmail\",\n};\n\nexport const accountPagesEnums = {\n  ACCOUNTS: \"Accounts\",\n  CHECKINGHOME: \"CheckingHome\",\n  CHECKINGINFO: \"CheckingInfo\",\n  CHECKINGTRANSACTIONS: \"CheckingTransactions\",\n  SAVINGSHOME: \"SavingsHome\",\n  SAVINGSINFO: \"SavingsInfo\",\n  SAVINGSTRANSACTIONS: \"SavingsTransactions\",\n  TRANSFERFUNDS: \"Transfer\",\n};\n\nexport const paymentPagesEnums = {\n  PAYMENTSHOME: \"PaymentsHome\",\n  LISTOFPAYEES: \"ListOfPayees\",\n  VERIFYPAYEE: \"VerifyPayee\",\n  ADDPAYEE: \"AddPayee\",\n  VERIFYBILL: \"VerifyBill\",\n  ADDBILL: \"AddBill\",\n};\n\nexport const eTransferPagesEnums = {\n  ETHOME: \"eTransferHome\",\n  ETCONTACTS: \"eTransferContacts\",\n  ETADDCONTACT: \"eTAddContact\",\n  SENDETRANSFER: \"sendETransfer\",\n  VERIFYETRANSFER: \"verifyETransfer\",\n};\n\n// SIGNIN\nexport const signInEnums = {\n  CLICKSIGNIN: \"ClieckSignIn\",\n  ENTERCARD: \"EnterCard\",\n  ENTERPW: \"EnterPw\",\n  NEVERSHARE: \"NeverShare\",\n  SAVECARD: \"SaveCard\",\n};\n\nexport const signInSteps = [\n  signInEnums.CLICKSIGNIN,\n  signInEnums.ENTERCARD,\n  signInEnums.ENTERPW,\n  signInEnums.NEVERSHARE,\n  signInEnums.SAVECARD,\n];\n\n// CREATE ACCOUNT\nexport const createEnums = {\n  GOTOREGISTER: \"GoToRegister\",\n  ENTERCARD: \"EnterCard\",\n  ENTERPHONE: \"EnterPhone\",\n  CLICKREGISTER: \"ClickRegister\",\n  ENTERVERIFICATIONCODE: \"EnterVerificationCode\",\n  CONFIRMVERIFICATION: \"ConfirmVerification\",\n  ENTEREMAIL: \"EnterEmail\",\n  CREATEPASSWORD: \"CreatePassword\",\n  REENTERPW: \"REENTERPW\",\n};\n\nexport const createSteps = [\n  createEnums.GOTOREGISTER,\n  createEnums.ENTERCARD,\n  createEnums.ENTERPHONE,\n  createEnums.CLICKREGISTER,\n  createEnums.ENTERVERIFICATIONCODE,\n  createEnums.CONFIRMVERIFICATION,\n  createEnums.ENTEREMAIL,\n  createEnums.CREATEPASSWORD,\n  createEnums.REENTERPW,\n];\n\n// ACCOUNT OVERVIEW\nexport const overviewEnums = {\n  check: \"check\",\n  balance: \"balance\",\n  accountInfo: \"accountInfo\",\n  hold: \"hold\",\n  overdraft: \"overdraft\",\n  available: \"available\",\n  institution: \"institution\",\n  transit: \"transit\",\n  accountNumber: \"accountNumber\",\n  transactions: \"transactions\",\n  wellRead: \"wellRead\",\n  taco: \"taco\",\n  internetDeposit: \"internetDeposit\",\n  preAuth: \"preAuth\",\n  totalDebits: \"totalDebits\",\n  credits: \"credits\",\n  creditsDebits: \"creditsDebits\",\n};\n\nexport const overviewSteps = [\n  overviewEnums.check,\n  overviewEnums.balance,\n  overviewEnums.accountInfo,\n  overviewEnums.hold,\n  overviewEnums.overdraft,\n  overviewEnums.available,\n  overviewEnums.institution,\n  overviewEnums.transit,\n  overviewEnums.accountNumber,\n  overviewEnums.transactions,\n  overviewEnums.wellRead,\n  overviewEnums.taco,\n  overviewEnums.internetDeposit,\n  overviewEnums.preAuth,\n  overviewEnums.totalDebits,\n  overviewEnums.credits,\n  overviewEnums.creditsDebits,\n];\n\n// MAKING PAYMENTS\nexport const makingPaymentsEnums = {\n  clickPayments: \"clickPayments\",\n  billPaymentsStep: \"billPaymentsStep\",\n  addEditPayee: \"addEditPayee\",\n  addCompanyName: \"addCompanyName\",\n  addBillNumber: \"addBillNumber\",\n  goToVerify: \"goToVerify\",\n  confirmPayee: \"confirmPayee\",\n  //  payBillNow : \"payBillNow\",\n  chooseTaco: \"chooseTaco\",\n  chooseDebitAccount: \"chooseDebitAccount\",\n  enterAmount: \"enterAmount\",\n  enterDate: \"enterDate\",\n  reviewBillPayment: \"reviewBillPayment\",\n  confirmBillPayment: \"confirmBillPayment\",\n};\n\nexport const makingPaymentsSteps = [\n  makingPaymentsEnums.clickPayments,\n  makingPaymentsEnums.billPaymentsStep,\n  makingPaymentsEnums.addEditPayee,\n  makingPaymentsEnums.addCompanyName,\n  makingPaymentsEnums.addBillNumber,\n  makingPaymentsEnums.goToVerify,\n  makingPaymentsEnums.confirmPayee,\n  // NOTE: TacoAdded after confirmPayee\n  makingPaymentsEnums.chooseTaco,\n  makingPaymentsEnums.chooseDebitAccount,\n  makingPaymentsEnums.enterAmount,\n  makingPaymentsEnums.enterDate,\n  makingPaymentsEnums.reviewBillPayment,\n  makingPaymentsEnums.confirmBillPayment,\n];\n\n// TRANSFER FUNDS\nexport const transferFundsEnums = {\n  clickPayTransfer: \"clickPayTransfer\",\n  clickTransfer: \"clickTransfer\",\n  selectChequing: \"selectChequing\",\n  selectSavings: \"selectSavings\",\n  enterAmount: \"enterAmount\",\n  transferType: \"transferType\",\n  confirmTransfer: \"confirmTransfer\",\n  goToSavings: \"goToSavings\",\n  goToSavingsTransactions: \"goToSavingsTransactions\",\n  confirmSavingsIncrease: \"confirmSavingsIncrease\",\n  goHomeToCheckChequing: \"goHomeToCheckChequing\",\n  toChequingForFinalReview: \"toChequingForFinalReview\",\n  toChequingTransactionsFinalReview: \"toChequingTransactionsFinalReview\",\n  finalReview: \"finalReview\",\n};\n\nexport const transferFundsSteps = [\n  transferFundsEnums.clickPayTransfer,\n  transferFundsEnums.clickTransfer,\n  transferFundsEnums.selectChequing,\n  transferFundsEnums.selectSavings,\n  transferFundsEnums.enterAmount,\n  transferFundsEnums.transferType,\n  transferFundsEnums.confirmTransfer,\n  transferFundsEnums.goToSavings,\n  transferFundsEnums.goToSavingsTransactions,\n  transferFundsEnums.confirmSavingsIncrease,\n  transferFundsEnums.goHomeToCheckChequing,\n  transferFundsEnums.toChequingForFinalReview,\n  transferFundsEnums.toChequingTransactionsFinalReview,\n  transferFundsEnums.finalReview,\n];\n\n// ETRANSFER ACTIVITY\nexport const eTransferEnums = {\n  clickPayTransfer: \"clickPayTransfer\",\n  chooseETransfer: \"chooseETransfer\",\n  addNewContact: \"addNewContact\",\n  enterName: \"enterName\",\n  enterEmail: \"enterEmail\",\n  addContact: \"addContact\",\n  chooseNewContact: \"chooseNewContact\",\n  enterAmount: \"enterAmount\",\n  chooseAccount: \"chooseAccount\",\n  chooseSecurityQuestion: \"chooseSecurityQuestion\",\n  enterQuestionAnswer: \"enterQuestionAnswer\",\n  reEnterAnswer: \"reEnterAnswer\",\n  addMessage: \"addMessage\",\n  goToSummary: \"goToSummary\",\n  reviewSummary: \"reviewSummary\",\n  clickSend: \"clickSend\",\n};\n\nexport const eTransferSteps = [\n  eTransferEnums.clickPayTransfer,\n  eTransferEnums.chooseETransfer,\n  eTransferEnums.addNewContact,\n  eTransferEnums.enterName,\n  eTransferEnums.enterEmail,\n  eTransferEnums.addContact,\n  eTransferEnums.chooseNewContact,\n  eTransferEnums.enterAmount,\n  eTransferEnums.chooseAccount,\n  eTransferEnums.chooseSecurityQuestion,\n  eTransferEnums.enterQuestionAnswer,\n  eTransferEnums.reEnterAnswer,\n  eTransferEnums.addMessage,\n  eTransferEnums.goToSummary,\n  eTransferEnums.reviewSummary,\n  eTransferEnums.clickSend,\n];\n","// import React from \"react\";\nimport styled from \"styled-components\";\nimport { bps } from \"../Global\";\n\nexport const PageContainer = styled.div``;\n\nexport const MarginedContainer = styled.div`\n  max-width: ${bps[3]}px;\n  margin: 0 auto;\n  /* padding: 0 10px; */\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  gap: 20px;\n`;\n\nexport const ActButton = styled.button`\n  background: ${(p) => (p.disabled ? \"grey\" : p.theme.colors.ylc_blue)};\n  color: white;\n  min-width: 70px;\n  min-height: 40px;\n  border-radius: 5px;\n  cursor: pointer;\n  ${(p) => p.theme.fonts.body_text_bold}\n  cursor: pointer;\n`;\n\nexport const AllActivitiesButton = styled(ActButton)`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  z-index: 10000000;\n  padding: 5px 10px;\n  min-height: 30px;\n  border-radius: 50px;\n`;\n\nexport const SignInButton = styled.button`\n  background-color: ${(p) => p.background || \"white\"};\n  color: ${(p) => p.color || p.theme.colors.ylc_blue};\n  width: 200px;\n  height: 60px;\n  border-radius: 20px;\n  ${(p) => p.theme.fonts.extra_small_header}\n  cursor: pointer;\n  margin: 30px;\n`;\n\nexport const ButtonContainer = styled.div`\n  width: 100%;\n  padding: 20px 0 0 0;\n  text-align: center;\n`;\n\nexport const NeutralBankingButton = styled.button`\n  background-color: ${(p) => p.background || \"white\"};\n  color: ${(p) => p.color || p.theme.colors.ylc_blue};\n  width: 100px;\n  height: 40px;\n  border-radius: 100px;\n  ${(p) => p.theme.fonts.body_text_bold}\n  cursor: pointer;\n`;\n","import { createContext } from \"react\";\n\nexport const IntroModalContext = createContext({\n  introModalState: {\n    isVisible: false,\n    isIntro: true,\n  },\n  setIntroContext: () => {},\n});\n\nexport const ActivityModalContext = createContext({\n  activityModalIsVisible: false,\n  setActivityContext: () => {},\n});\n\nexport const PaymentMethodsContext = createContext({\n  paymentMethodsIsVisible: false,\n  setPaymentMethodsContext: () => {},\n});\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { accountPagesEnums, activitiesEnums } from \"../enums\";\nimport { ActButton as ActButtonImport } from \"../Shared/Layout\";\nimport { mq } from \"../Global\";\nimport { useNavigate } from \"react-router-dom\";\nimport { bankPageEnums } from \"../enums\";\nimport { IntroModalContext } from \"../context\";\n\nconst ActSectionHeader = styled.h2`\n  ${(p) => p.theme.fonts.small_header}\n  padding: 20px 0 20px 90px;\n  background: ${(p) => p.theme.colors.light_accent};\n  ${mq[1]} {\n    padding-left: 15px;\n  }\n`;\n\nconst ActWrapper = styled.div`\n  background: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 90px;\n  padding-right: 90px;\n  height: 70px;\n  ${mq[1]} {\n    padding-left: 15px;\n    padding-right: 15px;\n  }\n`;\n\nconst ActTitle = styled.span`\n  font-size: 18px;\n  ${mq[1]} {\n    font-size: 16px;\n  }\n`;\n\n// url: activityName/step/bankPage/../..\n\nconst ActButton = ({ activity, children, closeModal }) => {\n  const { introModalState, setIntroContext } = useContext(IntroModalContext);\n  const navigate = useNavigate();\n\n  return (\n    <ActButtonImport\n      onClick={() => {\n        console.log(\"Act Button Click\");\n        console.log({ activity });\n        setIntroContext({\n          isVisible: true,\n          isIntro: introModalState.isIntro,\n        });\n\n        switch (activity) {\n          case activitiesEnums.CREATINGACCOUNT:\n            navigate(`/${activity}/0/${bankPageEnums.BANKHOMEPAGE}`);\n            break;\n\n          case activitiesEnums.SIGNIN:\n            navigate(`/${activity}/0/${bankPageEnums.BANKHOMEPAGE}`);\n            break;\n\n          case activitiesEnums.ACCOUNTOVERVIEW:\n            navigate(`/${activity}/0/${accountPagesEnums.ACCOUNTS}`);\n            break;\n\n          case activitiesEnums.MAKINGPAYMENTS:\n            navigate(`/${activity}/0/${accountPagesEnums.ACCOUNTS}`);\n            break;\n\n          case activitiesEnums.TRANSFERFUNDS:\n            navigate(`/${activity}/0/${accountPagesEnums.ACCOUNTS}`);\n            break;\n\n          case activitiesEnums.ETRANSFER:\n            navigate(`/${activity}/0/${accountPagesEnums.ACCOUNTS}`);\n            break;\n\n          default:\n            navigate(`/`);\n            break;\n        }\n        closeModal();\n      }}\n    >\n      {children}\n    </ActButtonImport>\n  );\n};\n\nconst Activity = ({ closeModal, activity, title }) => (\n  <ActWrapper>\n    <ActTitle>{title}</ActTitle>\n    <ActButton {...{ closeModal, activity }}>Start</ActButton>\n  </ActWrapper>\n);\n\nexport const ActivityList = ({ closeModal }) => {\n  return (\n    <>\n      <ActSectionHeader>Accessing Your Account</ActSectionHeader>\n      <Activity\n        title={\"Creating an account\"}\n        activity={activitiesEnums.CREATINGACCOUNT}\n        {...{ closeModal }}\n      />\n      <Activity\n        title={\"Signing in\"}\n        activity={activitiesEnums.SIGNIN}\n        {...{ closeModal }}\n      />\n      <ActSectionHeader>Account Details</ActSectionHeader>\n      <Activity\n        title={\"Online account overview\"}\n        activity={activitiesEnums.ACCOUNTOVERVIEW}\n        {...{ closeModal }}\n      />\n      <ActSectionHeader>Making Payments</ActSectionHeader>\n      <Activity\n        title={\"Pay a new company for the first time\"}\n        activity={activitiesEnums.MAKINGPAYMENTS}\n        {...{ closeModal }}\n      />\n      <ActSectionHeader>Transferring Funds</ActSectionHeader>\n      <Activity\n        title={\"Transfer funds between accounts\"}\n        activity={activitiesEnums.TRANSFERFUNDS}\n        {...{ closeModal }}\n      />\n      <Activity\n        title={\"Send an e-transfer to someone\"}\n        activity={activitiesEnums.ETRANSFER}\n        {...{ closeModal }}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { ModalOverlay, ResponsiveContent } from \"../Modal\";\nimport styled from \"styled-components\";\nimport { ActivityList } from \"./ActivityListing\";\nimport logo from \"../assets/dark_flake.png\";\n\n// import { Space, BoldDiv } from \"../Shared/BankPages\";\nimport { mq, mqMin } from \"../Global\";\n\nconst LargerSpace = styled.span`\n  width: 30px;\n  display: inline-block;\n`;\n\nconst ActChooserBody = styled.div`\n  /* position: relative; */\n  /* top: -160px; */\n  background: ${(p) => p.theme.colors.light_accent};\n  height: 100%;\n  padding-bottom: 20px;\n`;\n\nconst Welcome = styled.div`\n  ${(p) => p.theme.fonts.small_header};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${mq[1]} {\n    flex-direction: column;\n  }\n`;\n\nconst Intro = styled.div`\n  ${(p) => p.theme.fonts.body_text_bold}\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 5px 0;\n`;\n\nconst IntroContent = styled.div`\n  max-width: 550px;\n  padding: 10px 5px;\n  font-weight: normal;\n  /* text-align: center; */\n`;\n\nconst BlueSpan = styled.span`\n  color: ${(p) => p.theme.colors.ylc_blue};\n  display: inline-block;\n`;\n\nconst Choose = styled.div`\n  ${(p) => p.theme.fonts.medium_header}\n  display: flex;\n  justify-content: center;\n  padding: 15px 0 20px;\n`;\n\nconst LogoContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 150px;\n`;\n\nconst HeaderLogo = styled.img`\n  height: 300px;\n  position: relative;\n  top: -150px;\n  overflow: hidden;\n`;\n\nconst ActivityChooser = ({ visible, closeModal }) => {\n  const ActivityHeader = () => (\n    <div>\n      <LogoContainer>\n        <HeaderLogo src={logo} alt=\"\" />\n      </LogoContainer>\n      <Welcome>\n        <span>Welcome to the&nbsp;</span>\n        <BlueSpan>YLC Online Banking Simulator</BlueSpan>\n      </Welcome>\n      <Intro>\n        <IntroContent>\n          <LargerSpace />\n          The online banking simulator gives people everywhere the opportunity\n          to gain the confidence needed to start banking online. The activities\n          guide users through the step-by-step process to help them build\n          familiarity with online banking features. It is intended to show users\n          how to navigate some of the most common banking tasks. The appearance\n          and navigation will differ from bank to bank but most online banking\n          scenarios will allow you to complete these tasks in a similar manner.\n        </IntroContent>\n        <IntroContent>\n          <LargerSpace />\n          To use the online banking simulator, scroll down and choose an\n          activity by selecting \"start\". You will then be prompted with a white\n          box with an orange border with instructions on how to interact with\n          the site. You do not need an account and you do not need to share\n          personal information.\n        </IntroContent>\n      </Intro>\n      <Choose>Choose an Activity</Choose>\n    </div>\n  );\n\n  return (\n    <ModalOverlay\n      visible={visible}\n      closeModal={closeModal}\n      notOverlayCloseable={true}\n      render={() => (\n        <ResponsiveContent>\n          <ActChooserBody>\n            <ActivityHeader />\n            <ActivityList {...{ closeModal }} />\n          </ActChooserBody>\n        </ResponsiveContent>\n      )}\n    />\n  );\n};\n\nexport default ActivityChooser;\n","import { activitiesEnums } from \"./enums\";\n\nconst SignIn = {\n  intro:\n    \"In this activity, you will learn how to sign in to an online bank account. You will be prompted with a white box with an orange border giving you the how-to steps to sign in.\",\n  outro:\n    \"You did it! You now know how to sign in to online banking. If you have any questions or concerns about signing into your online bank account, contact your bank provider for help.\",\n};\n\nconst AccountOverview = {\n  intro:\n    \"In this activity, you will learn how to read all the different pieces of an online bank account. You will be prompted with a white box with an orange border giving you the how-to steps to review your account.\",\n  outro:\n    \"That’s it! You’ve now learned about the features of an online bank account.\",\n};\nconst MakingPayments = {\n  intro:\n    \"In this activity, you owe Taco Electric $68.00. You're going to pay them using online banking. You've never paid Taco Electric online before, so first you need to set them up as a payee.\",\n  outro: \"You now know how to add a new payee and pay a bill online.\",\n};\n\nconst CreatingAccount = {\n  intro:\n    \"In this activity you will learn how to register for an online banking account. You will be prompted with a white box with an orange border giving you the how-to steps to input information.\",\n  outro:\n    \"Now you are registered for online banking and can sign in, to access your account. \",\n};\n\nconst TransferFunds = {\n  intro:\n    \"In this activity you will learn to transfer funds from one account to another (ie: chequing to savings). Transferring money from one account to another can be helpful when a payment comes out of a different account than money is deposited into or when trying to meet a savings goal. (You can set up recurring transfers to happen daily, weekly, monthly, etc.. Or just as a one time payment. You will be prompted with a white box with an orange border giving you the how-to steps to review your account).\",\n  outro: \"You have successfully transferred funds between accounts.\",\n};\n\nconst ETransfer = {\n  intro:\n    \"In this activity you will learn how to set up a new contact, and send money via Interact E-Transfer. You will be prompted with a white box with an orange border giving you the how-to steps to follow for sending an E-Transfer.\",\n  outro: \"You have now learned to set up a new contact and send an e-transfer.\",\n};\n\nexport default {\n  [activitiesEnums.CREATINGACCOUNT]: CreatingAccount,\n  [activitiesEnums.SIGNIN]: SignIn,\n  [activitiesEnums.ACCOUNTOVERVIEW]: AccountOverview,\n  [activitiesEnums.MAKINGPAYMENTS]: MakingPayments,\n  [activitiesEnums.TRANSFERFUNDS]: TransferFunds,\n  [activitiesEnums.ETRANSFER]: ETransfer,\n};\n","import React, { useContext } from \"react\";\nimport { ModalOverlay, ResponsiveContent } from \"../Modal\";\nimport styled from \"styled-components\";\nimport introOutroCopy from \"../introOutroCopy\";\nimport logo from \"../assets/dark_flake.png\";\nimport { ActButton } from \"../Shared/Layout\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ActivityModalContext, IntroModalContext } from \"../context\";\n\nconst LargerSpace = styled.span`\n  width: 30px;\n  display: inline-block;\n`;\n\nconst HeaderLogo = styled.img`\n  height: 300px;\n  position: absolute;\n  top: -150px;\n  right: calc(50% - 150px);\n  overflow: hidden;\n`;\n\nconst IntroOutroContainer = styled.div`\n  padding: 30px 0 20px;\n  padding-top: 150px;\n`;\n\nconst TextSection = styled.div`\n  padding: 10px 50px;\n  ${(p) => p.theme.fonts.body_text_bold}\n`;\n\nconst ButtonSection = styled.div`\n  padding: 20px 0;\n  display: flex;\n  justify-content: center;\n`;\n\nconst IntroOutro = ({ copy }) => {\n  let { isVisible, setActivityContext } = useContext(ActivityModalContext);\n  let { introModalState, setIntroContext } = useContext(IntroModalContext);\n  let { activity } = useParams();\n  const navigate = useNavigate();\n\n  const visible = introModalState.isVisible;\n  const isIntro = introModalState.isIntro;\n\n  const closeModal = () => {\n    setIntroContext({\n      isVisible: false,\n      isIntro: introModalState.isIntro,\n    });\n  };\n\n  const text =\n    copy ||\n    introOutroCopy?.[activity]?.[isIntro ? \"intro\" : \"outro\"] ||\n    \"copy not available\";\n  return (\n    <ModalOverlay\n      visible={visible}\n      closeModal={closeModal}\n      notOverlayCloseable={true}\n      zIndex={110}\n      render={() => (\n        <ResponsiveContent>\n          <IntroOutroContainer>\n            <HeaderLogo src={logo} />\n            <TextSection>{text}</TextSection>\n            <TextSection>\n              {\n                \"No personal information will be required in these exercises. The information used is not a real bank account, it is an example for learning purposes.\"\n              }\n            </TextSection>\n            <ButtonSection>\n              {isIntro ? (\n                <ActButton onClick={() => closeModal()}>Continue</ActButton>\n              ) : (\n                <ActButton\n                  onClick={() => {\n                    setIntroContext({ isVisible: false, isIntro: true });\n                    navigate(\"/\");\n                  }}\n                >\n                  Start A New Activity\n                </ActButton>\n              )}\n            </ButtonSection>\n          </IntroOutroContainer>\n        </ResponsiveContent>\n      )}\n    />\n  );\n};\n\nexport default IntroOutro;\n","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport IntroOutro from \"../../IntroOutro\";\n\nconst SignIn = () => {\n  return (\n    <>\n      <Outlet />\n      <IntroOutro />\n    </>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport IntroOutro from \"../../IntroOutro\";\nimport { Outlet } from \"react-router-dom\";\n\nconst Overview = () => {\n  return (\n    <>\n      <IntroOutro />\n      <Outlet />\n    </>\n  );\n};\n\nexport default Overview;\n","import React from \"react\";\nimport IntroOutro from \"../../IntroOutro\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Outlet } from \"react-router-dom\";\n\nconst MakingPayments = () => {\n  return (\n    <>\n      <Outlet />\n      <IntroOutro />\n    </>\n  );\n};\n\nexport default MakingPayments;\n","import React from \"react\";\nimport IntroOutro from \"../../IntroOutro\";\nimport { Outlet } from \"react-router-dom\";\n\nconst CreatingAccount = () => {\n  return (\n    <>\n      <Outlet />\n      <IntroOutro />\n    </>\n  );\n};\n\nexport default CreatingAccount;\n","import React, { useState } from \"react\";\nimport IntroOutro from \"../../IntroOutro\";\n\nimport { Outlet } from \"react-router-dom\";\n\nconst TransferFunds = () => {\n  return (\n    <>\n      <Outlet />\n      <IntroOutro />\n    </>\n  );\n};\n\nexport default TransferFunds;\n","import React from \"react\";\nimport IntroOutro from \"../../IntroOutro\";\n\nimport { Outlet } from \"react-router-dom\";\n\nconst ETransfer = () => {\n  return (\n    <>\n      <Outlet />\n      <IntroOutro />\n    </>\n  );\n};\n\nexport default ETransfer;\n","import SignIn from \"./SignIn\";\nimport AccountOverview from \"./AccountOverview\";\nimport MakingPayments from \"./MakingPayments\";\nimport CreatingAccount from \"./CreatingAccount\";\nimport TransferFunds from \"./TransferFunds\";\nimport ETransfer from \"./ETransfer\";\nimport { activitiesEnums } from \"../enums\";\n\nexport default {\n  [activitiesEnums.CREATINGACCOUNT]: CreatingAccount,\n  [activitiesEnums.SIGNIN]: SignIn,\n  [activitiesEnums.ACCOUNTOVERVIEW]: AccountOverview,\n  [activitiesEnums.MAKINGPAYMENTS]: MakingPayments,\n  [activitiesEnums.TRANSFERFUNDS]: TransferFunds,\n  [activitiesEnums.ETRANSFER]: ETransfer,\n};\n","import React, { useEffect } from \"react\";\nimport { useLayer, useHover, Arrow } from \"react-laag\";\nimport { ActButton } from \"../../Shared/Layout\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  // Link,\n  Element,\n  // Events,\n  // animateScroll as scroll,\n  // scrollSpy,\n  scroller,\n} from \"react-scroll\";\n\nconst ContentSpan = styled.span`\n  position: relative;\n`;\n\nconst PlacedElement = styled.div``;\n\nconst ContentContainer = styled.div`\n  overflow: auto;\n  max-height: ${(p) => (p.maxHeight ? `${p.maxHeight}px` : \"300px\")};\n  padding: 20px;\n`;\n\nexport const BasicTooltip = ({\n  children,\n  content,\n  showTip,\n  triggerOffset,\n  staticOnly,\n  preferX,\n  placement,\n  noScroll,\n  tipContentStyles = {},\n  maxHeight,\n  showArrow = true,\n}) => {\n  const [isOver, hoverProps] = useHover();\n\n  useEffect(() => {\n    showTip &&\n      scroller.scrollTo(\"myScrollToElement\", {\n        // duration: 1500,\n        // delay: 100,\n        smooth: true,\n        // containerId: \"ContainerElementID\",\n        offset: -400, // Scrolls to element + 50 pixels down the page\n      });\n  }, [showTip]);\n\n  const { triggerProps, layerProps, arrowProps, renderLayer } = useLayer({\n    isOpen: showTip || (!staticOnly && isOver),\n    delayEnter: 100,\n    delayLeave: 100,\n    auto: true,\n    triggerOffset: triggerOffset || 20,\n    containerOffset: 10,\n    arrowOffset: 5,\n    preferX: preferX || \"right\",\n    placement: placement || \"right-center\",\n    // overflowContainer: false,\n  });\n\n  return (\n    <>\n      <ContentSpan {...triggerProps} {...hoverProps}>\n        {(showTip || (!staticOnly && isOver)) && !noScroll && (\n          <>\n            <PlacedElement id=\"ContainerElementID\">\n              <Element name=\"myScrollToElement\" />\n            </PlacedElement>\n          </>\n        )}\n        {children}\n      </ContentSpan>\n      {(showTip || (!staticOnly && isOver)) &&\n        renderLayer(\n          <AnimatePresence>\n            {showTip && (\n              <motion.div\n                {...layerProps}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                transition={{ duration: 0.2 }}\n              >\n                <div\n                  className=\"tooltip\"\n                  {...layerProps}\n                  style={{\n                    ...layerProps.style,\n                    // minWidth: 300,\n                    maxHeight: maxHeight || 350,\n                    // minHeight: 100,\n                    borderWidth: 4,\n                    borderColor: \"#FFA500\",\n                    borderStyle: \"solid\",\n                    backgroundColor: \"white\",\n                    borderRadius: \"5px\",\n                    // padding: \"20px\",\n                    maxWidth: \"300px\",\n                    // boxShadow: \"0 0 1px 1px gray\",\n                  }}\n                >\n                  <ContentContainer\n                    maxHeight={maxHeight}\n                    tipContentStyles={tipContentStyles}\n                  >\n                    {content}\n                  </ContentContainer>\n                  {showArrow && (\n                    <Arrow\n                      {...arrowProps}\n                      backgroundColor=\"white\"\n                      borderWidth={3}\n                      borderColor=\"#FFA500\"\n                      roundness={0.5}\n                      size={18}\n                      angle={30}\n                    />\n                  )}\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        )}\n    </>\n  );\n};\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 10px 0 0;\n`;\n\nexport const BasicTipButton = (props) => {\n  return (\n    <ButtonContainer>\n      <ActButton {...props}>{props.children}</ActButton>\n    </ButtonContainer>\n  );\n};\n\nconst TipContainer = styled.div`\n  position: absolute;\n`;\n\nexport const InfoTip = ({\n  tipContent,\n  showTip,\n  tipTarget,\n  showButton = true,\n  setStep,\n  buttonDisabled,\n  onClick,\n  ...rest\n}) => {\n  const Content = () => {\n    return (\n      <>\n        <>{tipContent}</>\n        {showButton && (\n          <BasicTipButton disabled={buttonDisabled} onClick={onClick}>\n            Continue\n          </BasicTipButton>\n        )}\n      </>\n    );\n  };\n  return (\n    <>\n      <BasicTooltip\n        content={<Content />}\n        showTip={showTip}\n        staticOnly={true}\n        {...rest}\n      >\n        {tipTarget}\n      </BasicTooltip>\n    </>\n  );\n};\n","import React from \"react\";\nimport logo from \"../assets/dark_flake.png\";\nimport blackLogo from \"../assets/dark_flake_black.png\";\nimport styled from \"styled-components\";\nimport { MarginedContainer } from \"../Shared/Layout\";\nimport { InfoTip } from \"../Shared/Tip\";\nimport { mq } from \"../Global\";\nimport NumberFormat from \"react-number-format\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport {\n  accountPagesEnums,\n  activitiesEnums,\n  overviewEnums,\n  overviewSteps,\n  transferFundsEnums,\n  transferFundsSteps,\n} from \"../enums\";\n\nexport const SubTitle = styled.div`\n  width: 100%;\n  text-align: center;\n  font-weight: bold;\n  font-family: Poppins;\n  ${(p) => p.theme.fonts.small_header}\n  color: ${(p) => p.theme.colors.ylc_blue};\n  padding-bottom: 20px;\n  ${mq[1]} {\n    font-size: 16px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  border: none;\n  border-bottom: 1px solid ${(p) => p.theme.colors.ylc_blue};\n  width: 100%;\n  ${(p) => p.theme.fonts.body_text};\n  font-weight: normal;\n  height: 40px;\n  ::placeholder {\n    color: ${(p) => p.theme.colors.ylc_blue};\n    opacity: 0.5;\n  }\n  :disabled {\n    background: transparent;\n  }\n`;\n\nexport const Space = styled.span`\n  width: 10px;\n  display: inline-block;\n`;\n\nexport const BoldDiv = styled.div`\n  font-weight: bold;\n  text-align: center;\n  padding: 5px 0;\n`;\n\nconst Logo = styled.img`\n  height: 150vh;\n  position: absolute;\n  top: -50vh;\n  right: calc(50% - 75vh);\n  overflow: hidden;\n  opacity: 0.5;\n  z-index: -1;\n`;\n\nconst BankingBackgroundContainer = styled.div`\n  height: 100%;\n  min-height: 100vh;\n  /* width: 100vw; */\n  overflow-x: hidden;\n  position: relative;\n`;\n\nconst BankingColor = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background: ${(p) => p.theme.colors.bank_blue};\n  /* opacity: 0.8; */\n  z-index: -1;\n  overflow-x: hidden;\n`;\n\nexport const BankingBackground = ({ children }) => {\n  return (\n    <BankingBackgroundContainer>\n      {children}\n      <BankingColor />\n      <Logo src={logo} />\n    </BankingBackgroundContainer>\n  );\n};\n\nconst BankLogoDiv = styled.div`\n  grid-column: span 12;\n  ${(p) => p.theme.fonts.extra_small_header};\n  display: flex;\n  justify-content: ${(p) => (p.left ? \"flex-start\" : \"center\")};\n  align-items: center;\n  color: white;\n  padding: 40px 0;\n  padding-bottom: ${(p) => (p.left ? \"15px\" : \"40px\")};\n`;\n\nconst LogoImg = styled.img`\n  height: 40px;\n  width: 40px;\n  padding-left: 5px;\n`;\n\nconst LogoTagWrapper = styled.div`\n  grid-column-start: 3;\n  grid-column-end: 11;\n  padding: 20px 0;\n  height: calc(170px - 40px);\n`;\n\nexport const BankingLogo = ({ left, NewStyle }) => (\n  <BankLogoDiv left={left}>\n    <span>Bank of YLC</span>\n    <LogoImg src={blackLogo} />\n  </BankLogoDiv>\n);\n\nconst TagContainer = styled.div`\n  grid-column: span 12;\n  color: white;\n`;\n\nexport const BankingTag = () => (\n  <TagContainer>Let us help you with your banking!</TagContainer>\n);\n\nconst ColoredDiv = styled.div`\n  height: 30px;\n  background-color: ${(p) => p.theme.colors.ylc_blue};\n  opacity: 0.7;\n`;\n\nconst HeaderWrapper = styled.div`\n  height: 200px;\n  /* display: flex; */\n  /* justify-content: space-between; */\n  /* flex-direction: column; */\n`;\n\nexport const BankingHeader = () => {\n  return (\n    <HeaderWrapper>\n      <MarginedContainer>\n        <LogoTagWrapper>\n          <BankingLogo left={true} />\n          <BankingTag />\n        </LogoTagWrapper>\n      </MarginedContainer>\n      <ColoredDiv />\n    </HeaderWrapper>\n  );\n};\n\nexport const SmallContainer = styled.div`\n  background: white;\n  grid-column-start: 4;\n  grid-column-end: 10;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  border-radius: 10px;\n  ${mq[2]} {\n    grid-column-start: 2;\n    grid-column-end: 12;\n  }\n`;\n\nexport const CleanBackground = styled.div`\n  /* background: ${(p) => p.theme.colors.light_accent}; */\n  background: rgb(242, 242, 242);\n  height: 100%;\n  /* padding-top: 15px; */\n  /* padding-bottom: 300px; */\n\n  // BASED ON THE HEADER HEIGHT\n  min-height: calc(100vh - 200px);\n  /* overflow: hidden; */\n`;\n\nexport const BankingContainer = styled.div`\n  grid-column-start: 2;\n  grid-column-end: 12;\n  /* padding: 10px; */\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  height: 100%;\n  /* padding-bottom: 200px; */\n  /* min-height: 100vh; */\n  /* overflow-y: hidden; */\n`;\n\nconst TransDetailsSection = styled.div`\n  background: white;\n  display: flex;\n  justify-content: center;\n  /* width: 100%; */\n  /* grid-column: span 12; */\n`;\n\nconst TransButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  color: ${(p) => (p.isActive ? \"grey\" : \"white\")};\n  background: ${(p) => (p.isActive ? \"white\" : p.theme.colors.bank_blue)};\n  cursor: pointer;\n  border: none;\n  ${(p) => p.theme.fonts.extra_small_header};\n  font-size: 16px;\n  border-radius: 2px;\n  padding: 5px;\n  /* border-bottom: 1px solid ${(p) => p.theme.colors.bank_blue}; */\n  ${mq[1]} {\n    font-size: 14px;\n  }\n`;\n\nexport const TransactionsDetails = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const isDetails = location.pathname\n    .split(\"/\")\n    .some((e) =>\n      [accountPagesEnums.CHECKINGINFO, accountPagesEnums.SAVINGSINFO].includes(\n        e\n      )\n    );\n\n  const isTransactions = location.pathname\n    .split(\"/\")\n    .some((e) =>\n      [\n        accountPagesEnums.CHECKINGTRANSACTIONS,\n        accountPagesEnums.SAVINGSTRANSACTIONS,\n      ].includes(e)\n    );\n\n  const isTransferFunds = activitiesEnums.TRANSFERFUNDS === activity;\n  const isOverview = activitiesEnums.ACCOUNTOVERVIEW === activity;\n\n  const isGoToSavingsTransactions =\n    isTransferFunds &&\n    transferFundsSteps[stepIndex] ===\n      transferFundsEnums.goToSavingsTransactions;\n\n  const isToChequingTransactionsFinalTransfer =\n    isTransferFunds &&\n    transferFundsSteps[stepIndex] ===\n      transferFundsEnums.toChequingTransactionsFinalReview;\n\n  console.log({ isToChequingTransactionsFinalTransfer });\n\n  const SpecifiedTransButton = () => {\n    if (isGoToSavingsTransactions || isToChequingTransactionsFinalTransfer) {\n      return (\n        <TransButton\n          onClick={() => {\n            if (isToChequingTransactionsFinalTransfer) {\n              navigate(\n                `/${activity}/${Number(stepIndex) + 1}/${\n                  accountPagesEnums.ACCOUNTS\n                }/${accountPagesEnums.CHECKINGHOME}/${\n                  accountPagesEnums.CHECKINGTRANSACTIONS\n                }`\n              );\n            } else {\n              navigate(\n                `/${activity}/${Number(stepIndex) + 1}/${\n                  accountPagesEnums.ACCOUNTS\n                }/${accountPagesEnums.SAVINGSHOME}/${\n                  accountPagesEnums.SAVINGSTRANSACTIONS\n                }`\n              );\n            }\n          }}\n          disabled={\n            !isGoToSavingsTransactions && !isToChequingTransactionsFinalTransfer\n          }\n          isActive={!isTransactions}\n        >\n          Transactions\n        </TransButton>\n      );\n    } else {\n      return (\n        <TransButton\n          onClick={() => {\n            console.log(\"CLICKY 2\");\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                accountPagesEnums.ACCOUNTS\n              }/${accountPagesEnums.CHECKINGHOME}/${\n                accountPagesEnums.CHECKINGTRANSACTIONS\n              }`\n            );\n          }}\n          disabled={\n            !isOverview ||\n            overviewSteps[stepIndex] !== overviewEnums.transactions\n          }\n          isActive={!isTransactions}\n        >\n          Transactions\n        </TransButton>\n      );\n    }\n  };\n\n  const OverviewTransactionsTip = () => {\n    return (\n      <InfoTip\n        tipContent={\n          <div>\n            <div>\n              Transactions represent the money being spent (debited) and the\n              money being added (credited) to your account.\n            </div>\n            {<br />}\n            <div>Click here to go to your transactions.</div>\n          </div>\n        }\n        showButton={false}\n        showTip={\n          isOverview && overviewSteps[stepIndex] === overviewEnums.transactions\n        }\n        tipTarget={<SpecifiedTransButton />}\n      />\n    );\n  };\n\n  const TransferSavingsTip = () => {\n    return (\n      <InfoTip\n        tipContent={<div>Click on \"Transactions\"</div>}\n        showButton={false}\n        showTip={\n          isGoToSavingsTransactions || isToChequingTransactionsFinalTransfer\n        }\n        tipTarget={<SpecifiedTransButton />}\n      />\n    );\n  };\n\n  return (\n    <TransDetailsSection>\n      {isToChequingTransactionsFinalTransfer || isGoToSavingsTransactions ? (\n        <TransferSavingsTip />\n      ) : (\n        <OverviewTransactionsTip />\n      )}\n      <InfoTip\n        tipContent={\n          <div>\n            Click here to go to Account Details to view all the details of your\n            bank account.\n          </div>\n        }\n        showButton={false}\n        showTip={\n          isOverview && overviewSteps[stepIndex] === overviewEnums.accountInfo\n        }\n        tipTarget={\n          <TransButton\n            onClick={() => {\n              navigate(\n                `/${activity}/${Number(stepIndex) + 1}/${\n                  accountPagesEnums.ACCOUNTS\n                }/${accountPagesEnums.CHECKINGHOME}/${\n                  accountPagesEnums.CHECKINGINFO\n                }`\n              );\n            }}\n            disabled={\n              !isOverview ||\n              overviewSteps[stepIndex] !== overviewEnums.accountInfo\n            }\n            isActive={!isDetails}\n          >\n            Account Details\n          </TransButton>\n        }\n      />\n    </TransDetailsSection>\n  );\n};\n\nconst ItemListingWrapper = styled.div`\n  background: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: calc(100% - 60px);\n  margin: 0 30px;\n  padding: 30px 0;\n  font-size: 20px;\n  border-bottom: solid 1px ${(p) => (p.isSummary ? \"transparent\" : \"lightgray\")};\n  cursor: pointer;\n  ${mq[1]} {\n    flex-direction: ${(p) => (p.separateDetails ? \"row\" : \"column\")};\n    align-items: flex-start;\n  }\n`;\n\nconst ItemTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ItemPrincipalText = styled.span`\n  font-weight: bold;\n  padding-bottom: 5px;\n  text-transform: uppercase;\n  /* ${(p) => p.theme.fonts.extra_small_header}; */\n  font-size: 18px;\n  ${mq[1]} {\n    font-size: 16px;\n  }\n`;\n\nconst ItemSubTextContainer = styled.span`\n  ${(p) => p.theme.fonts.large_button_text};\n  font-weight: normal;\n  text-transform: ${(p) => (p.lowercase ? \"none\" : \"uppercase\")};\n  display: flex;\n  flex-wrap: wrap;\n  ${mq[1]} {\n    flex-direction: column;\n    padding-top: 5px;\n  }\n`;\n\nconst ItemDate = styled.span`\n  padding-right: 20px;\n`;\n\nconst ItemTransaction = styled.span``;\n\nconst ItemDetails = styled.span`\n  color: ${(p) => (p.isPositive ? \"green\" : \"black\")};\n  padding-right: 10px;\n  ${mq[1]} {\n    /* width: 100%; */\n    /* text-align: center; */\n    padding: 10px 10px 0 0;\n    justify-self: flex-end;\n  }\n`;\n\nexport const ItemListing = ({\n  principal,\n  date,\n  trans,\n  details,\n  lowercase,\n  ...rest\n}) => {\n  return (\n    <ItemListingWrapper {...rest}>\n      <ItemTextContainer>\n        <ItemPrincipalText>{principal}</ItemPrincipalText>\n        {(date || trans) && (\n          <ItemSubTextContainer {...{ lowercase }}>\n            <ItemDate>{date}</ItemDate>\n            <ItemTransaction>{trans}</ItemTransaction>\n          </ItemSubTextContainer>\n        )}\n      </ItemTextContainer>\n      <ItemDetails {...rest}>{details}</ItemDetails>\n    </ItemListingWrapper>\n  );\n};\n\nexport const TransactionSubtitle = styled.div`\n  ${(p) => p.theme.fonts.small_header};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding: 15px 0;\n  background: ${(p) => p.theme.colors.light_accent};\n  /* border-bottom: 1px solid lightgray; */\n  ${mq[1]} {\n    font-size: 16px;\n  }\n`;\n\nexport const BillPayeeInput = styled.input`\n  width: calc(100% - 40px - 2px - 100px);\n  border: none;\n  padding: 20px;\n  margin: 0 50px;\n  border-bottom: 1px solid lightgray;\n  ${(p) => p.theme.fonts.body_text_bold};\n  :disabled {\n    background: transparent;\n  }\n`;\n\nexport const BillPayeeReview = styled.div`\n  width: calc(100% - 40px - 2px - 100px);\n  border: none;\n  padding: 20px;\n  margin: 0 50px;\n  border-bottom: 1px solid lightgray;\n  ${(p) => p.theme.fonts.body_text_bold};\n`;\n\nexport const ContinueButton = styled.button`\n  background-color: ${(p) => p.background || \"white\"};\n  /* color: ${(p) =>\n    p.disabled ? \"lightgrey\" : p.color || p.theme.colors.ylc_blue}; */\n  color: ${(p) => p.theme.colors.ylc_blue};\n  border-color: ${(p) => p.theme.colors.ylc_blue};\n  min-width: 140px;\n  height: 60px;\n  border-radius: 100px;\n  ${(p) => p.theme.fonts.extra_small_header}\n  font-size: 17px;\n  cursor: pointer;\n  :disabled {\n    /* background: red; */\n  }\n`;\n\nexport const ContinueButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  padding: 20px 0;\n`;\n\nexport const BankHeader = styled.div`\n  grid-column: span 12;\n  text-align: center;\n  ${(p) => p.theme.fonts.big_header}\n  color: white;\n  padding: 0 0 40px;\n`;\n\nexport const StyledNumberFormat = styled(NumberFormat)`\n  border: none;\n  /* border-bottom: 1px solid ${(p) => p.theme.colors.ylc_blue}; */\n  display: inline-block;\n  height: 40px;\n  ::placeholder {\n    color: ${(p) => p.theme.colors.ylc_blue};\n  }\n  ${(p) => p.centerText && \"text-align: center\"}\n  ${(p) => p.theme.fonts.body_text};\n  font-weight: normal;\n  flex-grow: 1;\n  :disabled {\n    background: transparent;\n  }\n`;\n\nexport const StyledTextInput = styled.input`\n  border: none;\n  /* border-bottom: 1px solid ${(p) => p.theme.colors.ylc_blue}; */\n  display: inline-block;\n  max-width: 100%;\n  /* width: 300px; */\n  height: 40px;\n  ::placeholder {\n    color: ${(p) => p.theme.colors.ylc_blue};\n  }\n  width: ${(p) => p.width && p.width};\n  ${(p) => p.theme.fonts.body_text};\n  font-weight: normal;\n  flex-grow: 1;\n  margin-right: 20px;\n  :disabled {\n    background: transparent;\n  }\n`;\n\nexport const LabelInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n`;\n\nexport const StyledSelect = styled.select`\n  /* width: calc(100% - 40px - 2px - 100px); */\n  display: inline-block;\n  border: none;\n  padding: 25px 0;\n  /* margin: 0 50px; */\n  /* border-bottom: 1px solid lightgray; */\n  /* border-bottom: 1px solid lightgray;\n  border-top: 1px solid lightgray; */\n  ${(p) => p.theme.fonts.body_text}\n  :disabled {\n    color: inherit;\n  }\n`;\n\nexport const OldStyledSelect = styled(StyledSelect)`\n  margin: 0 50px;\n  padding: 25px;\n  ${(p) => p.theme.fonts.body_text_bold}\n`;\n\nexport const StyledLabel = styled.label`\n  display: inline-block;\n  ${(p) => p.theme.fonts.body_text_bold}\n  /* font-size: 13px; */\n  padding: 5px 15px 5px 5px;\n  width: ${(p) => (p.width ? p.width : \"130px\")};\n  /* margin: 0 50px; */\n  /* ${mq[3]} {\n    width: 110px;\n  } */\n  /* ${mq[2]} {\n    width: 110px;\n  } */\n  /* ${mq[1]} {\n    width: 110px;\n  } */\n  word-wrap: none;\n`;\n\nexport const InputContainer = styled.div`\n  grid-column-start: 4;\n  grid-column-end: 10;\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 10px;\n  height: 100%;\n  ${mq[2]} {\n    grid-column-start: 3;\n    grid-column-end: 11;\n  }\n  ${mq[1]} {\n    grid-column-start: 2;\n    grid-column-end: 12;\n  }\n`;\n\nexport const BillPaymentsContainer = styled.div`\n  min-height: calc(100vh - 150px);\n  background: white;\n  padding-bottom: 150px;\n`;\n\nconst InnerContainer = styled.div`\n  /* min-height: calc(100vh - 150px); */\n  background: white;\n  padding: 15px 20px 0;\n  /* padding-bottom: 150px; */\n`;\n\nconst OuterContainer = styled.div`\n  width: max-content;\n  background: white;\n`;\n\nexport const FormContainer = ({ children, subtitle }) => {\n  return (\n    <OuterContainer>\n      {subtitle && <TransactionSubtitle>{subtitle}</TransactionSubtitle>}\n      <InnerContainer>{children}</InnerContainer>\n    </OuterContainer>\n  );\n};\n","import React from \"react\";\nimport {\n  BankHeader,\n  BankingBackground,\n  BankingLogo,\n} from \"../BankPageElements\";\nimport { MarginedContainer } from \"../../Shared/Layout\";\nimport { Outlet } from \"react-router-dom\";\n\nconst BankHomepage = () => {\n  return (\n    <>\n      <BankingBackground>\n        <MarginedContainer>\n          <BankingLogo />\n          <BankHeader>Welcome</BankHeader>\n          <Outlet />\n        </MarginedContainer>\n      </BankingBackground>\n    </>\n  );\n};\n\nexport default BankHomepage;\n","import React, { useContext } from \"react\";\nimport {\n  BoldDiv,\n  SmallContainer,\n  SubTitle,\n  StyledInput,\n  StyledLabel,\n} from \"../BankPageElements\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  activitiesEnums,\n  bankPageEnums,\n  signInEnums,\n  signInSteps,\n} from \"../../enums\";\nimport styled from \"styled-components\";\nimport { StyledNumberFormat } from \"../BankPageElements\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport { useState } from \"react\";\nimport { IntroModalContext } from \"../../context\";\n\nconst InputContainer = styled.div`\n  padding: 15px 0;\n`;\n\nconst PasswordLabel = styled.label`\n  ${(p) => p.theme.fonts.body_text};\n  color: ${(p) => p.theme.colors.ylc_blue};\n  display: flex;\n`;\n\nconst RadioInputContainer = styled.span`\n  padding: 10px;\n  width: 50px;\n`;\n\nconst FullSpan = styled.span`\n  width: 100%;\n  display: block;\n`;\n\nconst SignIn = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n  const [cardNumber, setCardNumber] = useState(undefined);\n  const [password, setPassword] = useState(undefined);\n  const [saveToggled, setSaveToggled] = useState(false);\n  const { introModalState, setIntroContext } = useContext(IntroModalContext);\n  const isSignIn = activity === activitiesEnums.SIGNIN;\n\n  return (\n    <SmallContainer>\n      <SubTitle>Sign In</SubTitle>\n      <InputContainer>\n        <InfoTip\n          tipContentStyles={{ overflow: \"scroll\" }}\n          maxHeight={500}\n          tipContent={\n            <div>\n              This is where you enter the 16-digit number from your debit card.{\" \"}\n              {<br />}\n              If you don’t have a card, you can use the number you were given at\n              the bank or a username to log into online banking. {<br />}\n              For this activity, enter: <BoldDiv>\n                1234 5678 9098 7654\n              </BoldDiv>{\" \"}\n              in the card number box then select ‘Continue’.\n            </div>\n          }\n          buttonDisabled={cardNumber !== \"1234 5678 9098 7654\"}\n          onClick={() =>\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                bankPageEnums.BANKHOMEPAGE\n              }/${bankPageEnums.SIGNIN}`\n            )\n          }\n          showTip={isSignIn && signInSteps[stepIndex] === signInEnums.ENTERCARD}\n          tipTarget={\n            <div>\n              <StyledLabel htmlFor=\"cardNum\"> Card Number:</StyledLabel>\n              <StyledNumberFormat\n                id=\"cardNum\"\n                onChange={(e) => setCardNumber(e.target.value)}\n                format=\"#### #### #### ####\"\n                placeholder={\"#### #### #### ####\"}\n              />\n            </div>\n          }\n        />\n        <InfoTip />\n      </InputContainer>\n      <InputContainer>\n        {/* SignIn StepIndex: 2 */}\n        <InfoTip\n          maxHeight={500}\n          tipContent={\n            <div>\n              This is where you enter your password. When creating your\n              password, try to use something different than what you would\n              normally use. Make it difficult for others to guess by using a\n              combination of letters and numbers. {<br />}\n              For this activity, enter password: <BoldDiv>\n                literacy1234\n              </BoldDiv>{\" \"}\n              in the password box then select 'Continue'.\n            </div>\n          }\n          showTip={isSignIn && signInSteps[stepIndex] === signInEnums.ENTERPW}\n          buttonDisabled={password !== \"literacy1234\"}\n          onClick={() =>\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                bankPageEnums.BANKHOMEPAGE\n              }/${bankPageEnums.SIGNIN}`\n            )\n          }\n          tipTarget={\n            <StyledInput\n              onChange={(e) => setPassword(e.target.value)}\n              type=\"password\"\n              placeholder={\"Password\"}\n            />\n          }\n        />\n        {/* SignIn: stepIndex: 3 */}\n        <InfoTip\n          placement=\"center\"\n          showArrow={false}\n          tipContent={\n            <div>\n              Never share or disclose your card number or password to another\n              person or website other than your bank. Your bank will never\n              request this information from you through an email. Giving your\n              password to another person or company places your finances and\n              privacy at risk.\n            </div>\n          }\n          onClick={() =>\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                bankPageEnums.BANKHOMEPAGE\n              }/${bankPageEnums.SIGNIN}`\n            )\n          }\n          tipTarget={<FullSpan />}\n          showTip={\n            isSignIn && signInSteps[stepIndex] === signInEnums.NEVERSHARE\n          }\n        />\n      </InputContainer>\n      <InputContainer>\n        <PasswordLabel>\n          Save password?\n          {/* SignIn: stepIndex: 4 */}\n          <InfoTip\n            tipContent={\n              <div>\n                Click this if you’d like to save your card number or username on\n                this computer, so you don’t have to enter it again the next time\n                you log in. We don’t recommend this option if you’re using a\n                public or shared computer. For this activity, click the box then\n                select ‘Continue’.\n              </div>\n            }\n            buttonDisabled={!saveToggled}\n            onClick={() => {\n              console.log(\"should go to next step\");\n              setIntroContext({ isVisible: true, isIntro: false });\n            }}\n            tipTarget={\n              <RadioInputContainer>\n                <input\n                  type=\"checkbox\"\n                  checked={saveToggled}\n                  onChange={() => setSaveToggled(saveToggled ? false : true)}\n                />\n              </RadioInputContainer>\n            }\n            showTip={\n              isSignIn && signInSteps[stepIndex] === signInEnums.SAVECARD\n            }\n          />\n        </PasswordLabel>\n      </InputContainer>\n    </SmallContainer>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { mq } from \"../Global\";\n\nexport const BankingButton = styled.button`\n  width: 200px;\n  height: 200px;\n  cursor: pointer;\n  ${(p) => p.theme.fonts.extra_small_header};\n  font-weight: normal;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    max-height: 50px;\n    padding-bottom: 5px;\n  }\n\n  ${mq[1]} {\n    width: 150px;\n    height: 150px;\n    font-size: 14px;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Outlet, useNavigate, useParams } from \"react-router-dom\";\nimport {\n  CARDNUM,\n  PHONENUM,\n  activitiesEnums,\n  bankPageEnums,\n  createEnums,\n  createSteps,\n} from \"../../enums\";\nimport {\n  SmallContainer,\n  BoldDiv,\n  StyledNumberFormat,\n  SubTitle,\n  InputContainer,\n  StyledLabel,\n  LabelInputContainer,\n} from \"../BankPageElements\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport { BankingButton } from \"../../Shared/Components\";\nimport { ButtonContainer, NeutralBankingButton } from \"../../Shared/Layout\";\n\nconst AccountRegistration = () => {\n  const navigate = useNavigate();\n  const { activity, stepIndex } = useParams();\n\n  const isEnterCard = createSteps[stepIndex] === createEnums.ENTERCARD;\n\n  const isPhone = createSteps[stepIndex] === createEnums.ENTERPHONE;\n\n  const isAfterPhone = stepIndex > 2;\n\n  const [cardNumber, setCardNumber] = useState(undefined);\n  const [phoneNumber, setPhoneNumber] = useState(undefined);\n\n  useEffect(() => {\n    !isEnterCard && setCardNumber(CARDNUM);\n  }, [isEnterCard]);\n\n  useEffect(() => {\n    isAfterPhone && setPhoneNumber(PHONENUM);\n  }, [isAfterPhone]);\n\n  return (\n    <SmallContainer>\n      <SubTitle>Register Your Account</SubTitle>\n      <InputContainer>\n        <InfoTip\n          tipContentStyles={{ overflow: \"scroll\" }}\n          maxHeight={500}\n          tipContent={\n            <div>\n              This is where you enter the 16-digit number from your debit card.{\" \"}\n              {<br />}\n              For this activity, enter: <BoldDiv>{CARDNUM}</BoldDiv> in the card\n              number box then select ‘Continue’.\n            </div>\n          }\n          buttonDisabled={cardNumber !== CARDNUM}\n          onClick={() =>\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                bankPageEnums.BANKHOMEPAGE\n              }/${bankPageEnums.ACCOUNTREGISTRATION}`\n            )\n          }\n          showTip={isEnterCard}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel htmlFor=\"cardNum\">Card Number</StyledLabel>\n              <StyledNumberFormat\n                id={\"cardNum\"}\n                onChange={(e) => setCardNumber(e.target.value)}\n                value={cardNumber}\n                format=\"#### #### #### ####\"\n                placeholder={\"#### #### #### ####\"}\n                disabled={!isEnterCard}\n              />\n            </LabelInputContainer>\n          }\n        />\n      </InputContainer>\n      <InputContainer>\n        <InfoTip\n          tipContentStyles={{ overflow: \"scroll\" }}\n          maxHeight={500}\n          tipContent={\n            <div>\n              Next enter your phone number associated with your bank account.{\" \"}\n              {<br />}\n              For this activity, enter: <BoldDiv>{PHONENUM}</BoldDiv> in the\n              phone number box then click \"Register\".\n            </div>\n          }\n          buttonDisabled={phoneNumber !== PHONENUM}\n          onClick={() =>\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                bankPageEnums.BANKHOMEPAGE\n              }/${bankPageEnums.ACCOUNTREGISTRATION}`\n            )\n          }\n          showTip={isPhone}\n          tipTarget={\n            <div>\n              <StyledLabel htmlFor=\"phoneNum\">Phone Number</StyledLabel>\n              <StyledNumberFormat\n                id=\"phoneNum\"\n                onChange={(e) => setPhoneNumber(e.target.value)}\n                value={phoneNumber}\n                disabled={!isPhone}\n                format=\"###-###-####\"\n                placeholder={\"###-###-####\"}\n              />\n            </div>\n          }\n        />\n        <ButtonContainer>\n          <InfoTip\n            tipContentStyles={{ overflow: \"scroll\" }}\n            maxHeight={500}\n            tipContent={<div>Click \"Register\". {<br />}</div>}\n            showButton={false}\n            showTip={createSteps[stepIndex] === createEnums.CLICKREGISTER}\n            tipTarget={\n              <NeutralBankingButton\n                onClick={() =>\n                  navigate(\n                    `/${activity}/${Number(stepIndex) + 1}/${\n                      bankPageEnums.BANKHOMEPAGE\n                    }/${bankPageEnums.PHONEVERIFICATION}`\n                  )\n                }\n                disabled={createSteps[stepIndex] !== createEnums.CLICKREGISTER}\n              >\n                Register\n              </NeutralBankingButton>\n            }\n          />\n        </ButtonContainer>\n      </InputContainer>\n    </SmallContainer>\n  );\n};\n\nexport default AccountRegistration;\n","import React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  activitiesEnums,\n  bankPageEnums,\n  signInEnums,\n  signInSteps,\n} from \"../../enums\";\nimport styled from \"styled-components\";\nimport { SignInButton } from \"../../Shared/Layout\";\nimport { InfoTip } from \"../../Shared/Tip\";\n\nconst StyledSignInWrapper = styled.div`\n  grid-column: span 12;\n  text-align: center;\n`;\n\nconst Welcome = () => {\n  const { stepIndex, activity } = useParams();\n  const navigate = useNavigate();\n  const isSignIn = activity === activitiesEnums.SIGNIN;\n  const isCreateAccount = activity === activitiesEnums.CREATINGACCOUNT;\n\n  return (\n    <StyledSignInWrapper>\n      {/* SignIn stepIndex: 0 */}\n      <InfoTip\n        tipContent={<div>Click here to sign in</div>}\n        tipTarget={\n          <SignInButton\n            disabled={!isSignIn}\n            onClick={() => {\n              if (isSignIn && stepIndex === \"0\") {\n                navigate(\n                  `/${activity}/${Number(stepIndex) + 1}/${\n                    bankPageEnums.BANKHOMEPAGE\n                  }/${bankPageEnums.SIGNIN}`\n                );\n              }\n            }}\n          >\n            Sign In\n          </SignInButton>\n        }\n        showTip={isSignIn && signInSteps[stepIndex] === signInEnums.CLICKSIGNIN}\n        showButton={false}\n      />\n      {/* Register - 0 */}\n      <InfoTip\n        tipContent={<div>Click here to register for online banking</div>}\n        tipTarget={\n          <SignInButton\n            disabled={!isCreateAccount}\n            onClick={() => {\n              navigate(\n                `/${activity}/${Number(stepIndex) + 1}/${\n                  bankPageEnums.BANKHOMEPAGE\n                }/${bankPageEnums.ACCOUNTREGISTRATION}`\n              );\n            }}\n          >\n            Register\n          </SignInButton>\n        }\n        showTip={isCreateAccount && stepIndex === \"0\"}\n        showButton={false}\n      />\n    </StyledSignInWrapper>\n  );\n};\n\nexport default Welcome;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  SmallContainer,\n  BoldDiv,\n  StyledNumberFormat,\n  SubTitle,\n  LabelInputContainer,\n  StyledLabel,\n} from \"../BankPageElements\";\nimport styled from \"styled-components\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  VERIFCODE,\n  bankPageEnums,\n  createEnums,\n  createSteps,\n} from \"../../enums\";\nimport { ButtonContainer, NeutralBankingButton } from \"../../Shared/Layout\";\n\nconst InputContainer = styled.div`\n  padding: 15px 0;\n  text-align: center;\n`;\n\nconst PhoneVerification = () => {\n  let { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n  const [verifCode, setVerifCode] = useState(undefined);\n\n  const isVerifStep =\n    createSteps[stepIndex] === createEnums.ENTERVERIFICATIONCODE;\n\n  useEffect(() => {\n    !isVerifStep && setVerifCode(VERIFCODE);\n  }, [isVerifStep]);\n\n  return (\n    <SmallContainer>\n      <SubTitle>Insert Verification Code</SubTitle>\n      <InputContainer>\n        <InfoTip\n          tipContentStyles={{ overflow: \"scroll\" }}\n          maxHeight={500}\n          tipContent={\n            <div>\n              Your institution will send you a verification code to get to the\n              next step via text or phone call. <br />\n              Let's say you received the text and it gives you the following\n              verification code: <BoldDiv>{VERIFCODE}</BoldDiv>\n              Enter the verification code in this box.\n            </div>\n          }\n          buttonDisabled={verifCode !== VERIFCODE}\n          onClick={() =>\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                bankPageEnums.BANKHOMEPAGE\n              }/${bankPageEnums.PHONEVERIFICATION}`\n            )\n          }\n          showTip={isVerifStep}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel>Insert Code:</StyledLabel>\n              <StyledNumberFormat\n                onChange={(e) => setVerifCode(e.target.value)}\n                format=\"####\"\n                placeholder={\"####\"}\n                value={verifCode}\n              />\n            </LabelInputContainer>\n          }\n        />\n        <ButtonContainer>\n          <InfoTip\n            tipContentStyles={{ overflow: \"scroll\" }}\n            maxHeight={500}\n            tipContent={<div>Click Confirm</div>}\n            showButton={false}\n            showTip={createSteps[stepIndex] === createEnums.CONFIRMVERIFICATION}\n            tipTarget={\n              <NeutralBankingButton\n                disabled={\n                  createSteps[stepIndex] !== createEnums.CONFIRMVERIFICATION\n                }\n                onClick={() => {\n                  navigate(\n                    `/${activity}/${Number(stepIndex) + 1}/${\n                      bankPageEnums.BANKHOMEPAGE\n                    }/${bankPageEnums.CREATEEMAIL}`\n                  );\n                }}\n              >\n                Confirm\n              </NeutralBankingButton>\n            }\n          />\n        </ButtonContainer>\n      </InputContainer>\n    </SmallContainer>\n  );\n};\n\nexport default PhoneVerification;\n\n{\n  /* Create verification code zone and mock phone popup, verification confirmed  */\n}\n{\n  /* Create email and password section (and password re-enter). With confirm button */\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  SmallContainer,\n  BoldDiv,\n  Space,\n  StyledInput,\n  SubTitle,\n} from \"../BankPageElements\";\nimport styled from \"styled-components\";\nimport { ButtonContainer, NeutralBankingButton } from \"../../Shared/Layout\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport {\n  REGISTEREMAIL,\n  REGISTERPW,\n  bankPageEnums,\n  createEnums,\n  createSteps,\n} from \"../../enums\";\nimport { IntroModalContext } from \"../../context\";\n\nconst InputContainer = styled.div`\n  padding: 15px 0;\n`;\n\nconst CreateEmail = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n\n  const isEnterEmailStep = createSteps[stepIndex] === createEnums.ENTEREMAIL;\n\n  const isEnterPWStep = createSteps[stepIndex] === createEnums.CREATEPASSWORD;\n\n  const [email, setEmail] = useState(\n    isEnterEmailStep ? undefined : REGISTEREMAIL\n  );\n\n  const [password, setPassword] = useState(\n    isEnterPWStep || isEnterEmailStep ? undefined : REGISTERPW\n  );\n\n  const [passwordTwo, setPasswordTwo] = useState(undefined);\n  const { introModalState, setIntroContext } = useContext(IntroModalContext);\n\n  useEffect(() => {\n    !isEnterEmailStep && setEmail(REGISTEREMAIL);\n  }, [isEnterEmailStep]);\n\n  useEffect(() => {\n    if (stepIndex > createSteps.indexOf(createEnums.CREATEPASSWORD)) {\n      setPassword(REGISTERPW);\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (stepIndex > createSteps.indexOf(createEnums.REENTERPW)) {\n      setPassword(REGISTERPW);\n    }\n  }, [stepIndex]);\n\n  return (\n    <SmallContainer>\n      <SubTitle>Enter Email and Password</SubTitle>\n      <InputContainer>\n        <InfoTip\n          tipContentStyles={{ overflow: \"scroll\" }}\n          maxHeight={500}\n          tipContent={\n            <div>\n              Enter the email here.\n              <br />\n              For this activity we will use:\n              <BoldDiv>{REGISTEREMAIL}</BoldDiv>\n            </div>\n          }\n          buttonDisabled={email !== REGISTEREMAIL}\n          onClick={() =>\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                bankPageEnums.BANKHOMEPAGE\n              }/${bankPageEnums.CREATEEMAIL}`\n            )\n          }\n          showTip={createSteps[stepIndex] === createEnums.ENTEREMAIL}\n          tipTarget={\n            <StyledInput\n              disabled={createSteps[stepIndex] !== createEnums.ENTEREMAIL}\n              onChange={(e) => setEmail(e.target.value)}\n              type=\"email\"\n              placeholder={\"Email\"}\n              value={email}\n            />\n          }\n        />\n        <Space />\n        <InfoTip\n          tipContentStyles={{ overflow: \"scroll\" }}\n          maxHeight={500}\n          tipContent={\n            <div>\n              For this activity use:\n              <BoldDiv>{REGISTERPW}</BoldDiv>\n              as the password.\n            </div>\n          }\n          buttonDisabled={password !== REGISTERPW}\n          onClick={() =>\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                bankPageEnums.BANKHOMEPAGE\n              }/${bankPageEnums.CREATEEMAIL}`\n            )\n          }\n          showTip={createSteps[stepIndex] === createEnums.CREATEPASSWORD}\n          tipTarget={\n            <StyledInput\n              disabled={createSteps[stepIndex] !== createEnums.CREATEPASSWORD}\n              onChange={(e) => setPassword(e.target.value)}\n              type=\"password\"\n              placeholder={\"Password\"}\n              value={password}\n            />\n          }\n        />\n\n        <InfoTip\n          tipContentStyles={{ overflow: \"scroll\" }}\n          maxHeight={500}\n          tipContent={\n            <div>\n              Re-enter the password here. Remember, it is:\n              <BoldDiv>literacy1234</BoldDiv>.\n              <br />\n              <BoldDiv>\n                {password !== passwordTwo\n                  ? \"*The passwords do not currently match*\"\n                  : \"*Looks good!\"}\n              </BoldDiv>\n            </div>\n          }\n          buttonDisabled={password !== REGISTERPW || passwordTwo !== password}\n          onClick={() => setIntroContext({ isVisible: true, isIntro: false })}\n          showTip={createSteps[stepIndex] === createEnums.REENTERPW}\n          tipTarget={\n            <StyledInput\n              disabled={createSteps[stepIndex] !== createEnums.REENTERPW}\n              onChange={(e) => setPasswordTwo(e.target.value)}\n              type=\"password\"\n              placeholder={\"Re-enter Password\"}\n              value={passwordTwo}\n            />\n          }\n        />\n        <ButtonContainer>\n          <NeutralBankingButton>Confirm</NeutralBankingButton>\n        </ButtonContainer>\n      </InputContainer>\n    </SmallContainer>\n  );\n};\n\nexport default CreateEmail;\n","import BankHomepage from \"./BankHomepage\";\nimport SignIn from \"./SignIn\";\nimport AccountRegistration from \"./AccountRegistration\";\nimport Welcome from \"./Welcome\";\nimport PhoneVerification from \"./PhoneVerification\";\nimport CreateEmail from \"./CreateEmail\";\n\nexport { SignIn, AccountRegistration, Welcome, PhoneVerification, CreateEmail };\n\nexport default BankHomepage;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <div>404 Error</div>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { mq } from \"../../Global\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport {\n  accountPagesEnums,\n  activitiesEnums,\n  overviewEnums,\n  overviewSteps,\n  transferFundsEnums,\n  transferFundsSteps,\n} from \"../../enums\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport { BankingContainer } from \"../BankPageElements\";\n\nconst StyledAccountBlock = styled.div`\n  display: flex;\n  border: 1px solid lightgray;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  box-shadow: 1px 0px 5px lightgray;\n  cursor: pointer;\n  background: white;\n`;\n\nconst AccountInfo = styled.div`\n  flex-grow: 1;\n`;\n\nconst BankAccounts = styled.div`\n  ${(p) => p.theme.fonts.body_text};\n  color: grey;\n  padding: 15px 0;\n`;\n\nconst AccountTitle = styled.span`\n  font-weight: bold;\n  border-bottom: 3px solid lightgray;\n  padding: 15px 0 10px;\n  margin-left: 15px;\n  display: inline-block;\n`;\nconst AccountNumber = styled.span`\n  padding-left: 10px;\n  color: grey;\n`;\n\nconst AccountBalance = styled.div`\n  padding: 10px 0 10px 15px;\n  color: ${(p) => p.theme.colors.ylc_blue};\n`;\n\nconst TransferContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 150px;\n  border-left: 2px solid lightgray;\n  color: ${(p) => p.theme.colors.ylc_blue};\n  ${(p) => p.theme.fonts.body_text};\n  ${mq[1]} {\n    min-width: 100px;\n  }\n`;\n\nconst AllAccountsContainer = styled.div`\n  padding-bottom: 150px;\n`;\n\nconst AccountBlock = ({\n  title,\n  onClick,\n  disabled = false,\n  balance,\n  accNumber,\n}) => (\n  <StyledAccountBlock>\n    <AccountInfo disabled={disabled} onClick={onClick}>\n      <AccountTitle>{title}</AccountTitle>\n      <AccountNumber>{accNumber}</AccountNumber>\n      <AccountBalance>{balance}</AccountBalance>\n    </AccountInfo>\n    <TransferContainer>TRANSFER</TransferContainer>\n  </StyledAccountBlock>\n);\n\nconst AllAccounts = () => {\n  const { stepIndex, activity } = useParams();\n  const navigate = useNavigate();\n\n  const isOverview = activitiesEnums.ACCOUNTOVERVIEW === activity;\n  const isTransferFunds = activitiesEnums.TRANSFERFUNDS === activity;\n\n  const isIncreasedSavingsBalance = isTransferFunds && stepIndex >= 6;\n  const chequingBalance = isIncreasedSavingsBalance ? \"17,723.00\" : \"18,023.00\";\n  const savingsBalance = isIncreasedSavingsBalance ? \"800\" : \"500\";\n\n  const isOverviewCheck =\n    isOverview && overviewSteps[stepIndex] === overviewEnums.check;\n\n  const isTransferFinalReview =\n    isTransferFunds &&\n    transferFundsSteps[stepIndex] ===\n      transferFundsEnums.toChequingForFinalReview;\n\n  return (\n    <BankingContainer>\n      <AllAccountsContainer>\n        <BankAccounts>Bank Accounts</BankAccounts>\n        <InfoTip\n          tipContent={<div>Click on ‘Chequing’.</div>}\n          showTip={isOverviewCheck || isTransferFinalReview}\n          showButton={false}\n          placement=\"left-center\"\n          tipTarget={\n            <AccountBlock\n              title={\"Chequing\"}\n              balance={`$${chequingBalance}`}\n              accNumber={\"5522\"}\n              disabled={!isOverviewCheck && !isTransferFinalReview}\n              onClick={() => {\n                navigate(\n                  `/${activity}/${Number(stepIndex) + 1}/${\n                    accountPagesEnums.ACCOUNTS\n                  }/${accountPagesEnums.CHECKINGHOME}`\n                );\n              }}\n            />\n          }\n        />\n        {/* TODO: Need to increment when we are at the next step */}\n        <InfoTip\n          tipContent={<div>Click on \"Savings\".</div>}\n          showTip={\n            isTransferFunds &&\n            transferFundsSteps[stepIndex] === transferFundsEnums.goToSavings\n          }\n          showButton={false}\n          placement=\"left-center\"\n          tipTarget={\n            <AccountBlock\n              title={\"Savings\"}\n              balance={`$${savingsBalance}`}\n              accNumber={\"7788\"}\n              disabled={\n                !isTransferFunds ||\n                transferFundsSteps[stepIndex] !== transferFundsEnums.goToSavings\n              }\n              onClick={() => {\n                navigate(\n                  `/${activity}/${Number(stepIndex) + 1}/${\n                    accountPagesEnums.ACCOUNTS\n                  }/${accountPagesEnums.SAVINGSHOME}`\n                );\n              }}\n            />\n          }\n        />\n        <AccountBlock\n          title={\"Checking 2\"}\n          balance={\"$5,112.50\"}\n          accNumber={\"9811\"}\n        />\n      </AllAccountsContainer>\n    </BankingContainer>\n  );\n};\n\nexport default AllAccounts;\n","import React from \"react\";\nimport { InfoTip } from \"../../../Shared/Tip\";\nimport styled from \"styled-components\";\nimport { ItemListing } from \"../../BankPageElements\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  accountPagesEnums,\n  overviewEnums,\n  overviewSteps,\n} from \"../../../enums\";\n\nconst AccountInformation = () => {\n  const navigate = useNavigate();\n  const { activity, stepIndex } = useParams();\n  return (\n    <>\n      <InfoTip\n        tipContent={\n          <div>\n            Funds on hold are deposits made to your account that are not yet\n            available to withdraw. This sometimes happens when money is\n            deposited through a bank machine.\n          </div>\n        }\n        tipTarget={\n          <ItemListing principal={\"Funds on Hold\"} details=\"$500.00\" />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGINFO\n            }`\n          );\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.hold}\n      />\n      <InfoTip\n        tipContent={\n          <div>\n            Overdraft Limit is the maximum amount of money you can withdraw from\n            your account after your balance reaches zero. There is typically a\n            fee to use overdraft. At many banks, an overdraft fee can cost up to\n            $35.\n          </div>\n        }\n        tipTarget={\n          <ItemListing principal={\"Overdraft Limit\"} details=\"$100.00\" />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGINFO\n            }`\n          );\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.overdraft}\n      />\n      <InfoTip\n        tipContent={\n          <div>\n            Available funds is the amount available for immediate use in your\n            account.\n          </div>\n        }\n        tipTarget={\n          <ItemListing principal={\"Available Funds\"} details=\"$17,623.00\" />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGINFO\n            }`\n          );\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.available}\n      />\n      <InfoTip\n        tipContent={\n          <div>\n            An institution number is a 3-digit code that identifies which bank\n            provider the account is associated with.\n          </div>\n        }\n        tipTarget={\n          <ItemListing principal={\"Institution Number\"} details=\"554\" />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGINFO\n            }`\n          );\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.institution}\n      />\n      <InfoTip\n        tipContent={\n          <div>\n            A transit number is a 5-digit code that identifies where in Canada\n            your bank is located.\n          </div>\n        }\n        tipTarget={<ItemListing principal={\"Transit Number\"} details=\"55519\" />}\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGINFO\n            }`\n          );\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.transit}\n      />\n      <InfoTip\n        tipContent={\n          <div>\n            An account number is a 7-digit number that identifies the owner of\n            the account.\n          </div>\n        }\n        tipTarget={\n          <ItemListing principal={\"Account Number\"} details=\"555-5555\" />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGINFO\n            }`\n          );\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.accountNumber}\n      />\n    </>\n  );\n};\n\nexport default AccountInformation;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { InfoTip } from \"../../../Shared/Tip\";\nimport { BoldDiv, ItemListing } from \"../../BankPageElements\";\nimport {\n  accountPagesEnums,\n  activitiesEnums,\n  overviewEnums,\n  overviewSteps,\n  transferFundsEnums,\n  transferFundsSteps,\n} from \"../../../enums\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { IntroModalContext } from \"../../../context\";\n\nconst FullEmptyDiv = styled.div`\n  width: 100%;\n  height: 10px;\n`;\n\nlet [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\nconst todayDate = `${day} ${month}, ${year}`;\n\nconst Transactions = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n  const { introModalState, setIntroContext } = useContext(IntroModalContext);\n\n  const isTransferFunds = activitiesEnums.TRANSFERFUNDS === activity;\n  const isOverview = activity === activitiesEnums.ACCOUNTOVERVIEW;\n\n  const isTransferFinal =\n    isTransferFunds &&\n    transferFundsSteps[stepIndex] === transferFundsEnums.finalReview;\n\n  return (\n    <>\n      <InfoTip\n        tipContent={\n          <div>\n            Here you can see the amount transferred from your chequing account\n            to savings!\n          </div>\n        }\n        showTip={isTransferFinal}\n        onClick={() => setIntroContext({ isVisible: true, isIntro: false })}\n        tipTarget={\n          <ItemListing\n            principal={\"7788 8899-222\"}\n            date={todayDate}\n            trans={\"Transfer - Savings\"}\n            details={\"-$300.00\"}\n          />\n        }\n      />\n\n      <InfoTip\n        tipContent={\n          <>\n            <div>\n              On January 21st, $12.50 was spent at Books Galore. Point of Sale\n              (POS) Interac Retail purchase means you made a purchase with your\n              debit card.\n            </div>\n            {<br />}\n            <div>\n              The numbers you see represent the transaction number which is a\n              special label that identifies the purchase. Every purchase will\n              have a different transaction number.\n            </div>\n          </>\n        }\n        tipTarget={\n          <ItemListing\n            principal={\"Books Galore 000009887767\"}\n            date={\"Jan 21, 2020\"}\n            trans={\"POS - Interac Retail purchase\"}\n            details={\"-$12.50\"}\n          />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGTRANSACTIONS\n            }`\n          );\n        }}\n        showTip={\n          isOverview && overviewSteps[stepIndex] === overviewEnums.wellRead\n        }\n      />\n      <InfoTip\n        tipContent={\n          <>\n            <div>\n              On January 16th, $109.45 was debited from your account to pay a\n              Taco Electric bill. An internet bill payment is made by sending\n              the company money online through online banking.\n            </div>\n          </>\n        }\n        tipTarget={\n          <ItemListing\n            principal={\"TACO ELECTRIC 0000376166356\"}\n            date={\"Jan 16, 2020\"}\n            trans={\"internet banking - Internet Bill Pay\"}\n            details={\"-$109.45\"}\n          />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGTRANSACTIONS\n            }`\n          );\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.taco}\n      />\n      <InfoTip\n        tipContent={\n          <>\n            <div>\n              On January 5th, $2000 was deposited (credited) in the account.\n            </div>\n          </>\n        }\n        tipTarget={\n          <ItemListing\n            principal={\"Deposit 0000000261883\"}\n            date={\"5 Jan, 2020\"}\n            trans={\"Internet banking - deposit\"}\n            details={\"+$2000.00\"}\n            isPositive\n          />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGTRANSACTIONS\n            }`\n          );\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.internetDeposit}\n      />\n      <InfoTip\n        tipContent={\n          <>\n            <div>\n              On January 1st, $96.00 was debited from the account to TD\n              Insurance National. A preauthorized debit means instead of sending\n              a payment, the owner of the account gave permission for a company\n              to automatically withdraw funds. This typically happens monthly.\n            </div>\n            {<br />}\n            <div>\n              It’s a convenient way to pay bills on time. It is important to\n              remember the date bill payments come out so that you have money in\n              your account for it. If you forget you could go into the overdraft\n              and have to pay a fee.\n            </div>\n          </>\n        }\n        tipTarget={\n          <ItemListing\n            principal={\"Debit Td insurance nat'l\"}\n            date={\"1 Jan, 2020\"}\n            trans={\"electronic funds - transfer preauthorized debit\"}\n            details={\"-$96.00\"}\n          />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGTRANSACTIONS\n            }`\n          );\n        }}\n        showTip={\n          isOverview && overviewSteps[stepIndex] === overviewEnums.preAuth\n        }\n      />\n      <ItemListing\n        principal={\"midnight sun co 000009767867\"}\n        date={\"28 Dec, 2019\"}\n        trans={\"POS - interac retail purchase\"}\n        details={\"-$4.95\"}\n      />\n      <ItemListing\n        principal={\"Toyota Canada 0000000763651\"}\n        date={\"26 Dec, 2020\"}\n        trans={\"internet banking - internet bill pay\"}\n        details={\"-$320.00\"}\n      />\n      <ItemListing\n        principal={\"E-transfer 00000736716\"}\n        date={\"26 Dec, 2020\"}\n        trans={\"internet banking - internet e-transfer\"}\n        details={\"-$900.00\"}\n      />\n      <InfoTip\n        tipContent={\n          <div>\n            <div>\n              The total amount spent (debited) in the account is $1422.90\n            </div>\n          </div>\n        }\n        tipTarget={\n          <ItemListing\n            isSummary\n            principal={\"Total debits\"}\n            details={\"-$1422.90\"}\n          />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGTRANSACTIONS\n            }`\n          );\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.totalDebits}\n      />\n      <InfoTip\n        tipContent={\n          <div>\n            <div>\n              The total amount deposited (credited) in the account is $2000.00\n            </div>\n          </div>\n        }\n        tipTarget={\n          <ItemListing\n            isSummary\n            principal={\"Total credits\"}\n            details=\"+$2000.00\"\n          />\n        }\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}/${\n              accountPagesEnums.CHECKINGTRANSACTIONS\n            }`\n          );\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.credits}\n      />\n      <InfoTip\n        tipContent={\n          <div>\n            <div>\n              <BoldDiv>\n                $2000.00 (Total credits) - $1422.90 (Total debits) = $577.10\n              </BoldDiv>\n              {<br />}\n              <div>$577.10 is left over this month.</div>\n              {<br />}\n            </div>\n          </div>\n        }\n        tipTarget={<FullEmptyDiv />}\n        onClick={() => {\n          setIntroContext({ isVisible: true, isIntro: false });\n        }}\n        showTip={overviewSteps[stepIndex] === overviewEnums.creditsDebits}\n        placement={\"center\"}\n        showArrow={false}\n      />\n    </>\n  );\n};\n\nexport default Transactions;\n","import React from \"react\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport styled from \"styled-components\";\nimport { BankingContainer, TransactionsDetails } from \"../BankPageElements\";\nimport { Outlet, useNavigate, useParams } from \"react-router-dom\";\nimport {\n  accountPagesEnums,\n  activitiesEnums,\n  overviewEnums,\n  overviewSteps,\n} from \"../../enums\";\n\nconst CheckingSectionWrapper = styled.div`\n  background: white;\n  padding-bottom: 100px;\n`;\n\nconst CheckingHeaderContainer = styled.div``;\n\nconst CheckingHeader = styled.div`\n  ${(p) => p.theme.fonts.small_header};\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n`;\n\nconst AccountNumber = styled.div`\n  color: grey;\n  ${(p) => p.theme.fonts.large_button_text};\n  text-align: center;\n  padding-top: 5px;\n`;\n\nconst NotedBalance = styled.div`\n  ${(p) => p.theme.fonts.medium_header};\n  text-align: center;\n  padding: 15px;\n  font-weight: normal;\n`;\n\nconst CheckingHeaderInfo = () => {\n  const { activity, stepIndex } = useParams();\n  const isOverview = activity === activitiesEnums.ACCOUNTOVERVIEW;\n  const navigate = useNavigate();\n\n  const isTransferFunds = activitiesEnums.TRANSFERFUNDS === activity;\n  const isIncreasedSavingsBalance = isTransferFunds && stepIndex >= 6;\n  const chequingBalance = isIncreasedSavingsBalance ? \"17,723.00\" : \"18,023.00\";\n\n  return (\n    <CheckingHeaderContainer>\n      <CheckingHeader>Chequing</CheckingHeader>\n      <AccountNumber>5522 8899-222</AccountNumber>\n\n      <InfoTip\n        placement=\"bottom-center\"\n        triggerOffset={-10}\n        tipContent={\n          <div>\n            This number represents your account balance, which shows the amount\n            of money in your account, including any funds on hold.{\" \"}\n          </div>\n        }\n        onClick={() =>\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.CHECKINGHOME}`\n          )\n        }\n        showTip={\n          isOverview && overviewSteps[stepIndex] === overviewEnums.balance\n        }\n        tipTarget={<NotedBalance>${chequingBalance}</NotedBalance>}\n      />\n\n      <TransactionsDetails />\n    </CheckingHeaderContainer>\n  );\n};\n\nconst CheckingHome = () => {\n  return (\n    <BankingContainer>\n      <CheckingSectionWrapper>\n        <CheckingHeaderInfo />\n        <Outlet />\n      </CheckingSectionWrapper>\n    </BankingContainer>\n  );\n};\n\nexport default CheckingHome;\n","import React from \"react\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport styled from \"styled-components\";\nimport { BankingContainer, TransactionsDetails } from \"../BankPageElements\";\nimport { Outlet, useNavigate, useParams } from \"react-router-dom\";\nimport {\n  accountPagesEnums,\n  activitiesEnums,\n  overviewEnums,\n  overviewSteps,\n} from \"../../enums\";\n\nconst AccountSectionWrapper = styled.div`\n  background: white;\n  padding-bottom: 100px;\n`;\n\nconst AccountHeaderContainer = styled.div``;\n\nconst AccountHeader = styled.div`\n  ${(p) => p.theme.fonts.small_header};\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n`;\n\nconst AccountNumber = styled.div`\n  color: grey;\n  ${(p) => p.theme.fonts.large_button_text};\n  text-align: center;\n  padding-top: 5px;\n`;\n\nconst NotedBalance = styled.div`\n  ${(p) => p.theme.fonts.medium_header};\n  text-align: center;\n  padding: 15px;\n  font-weight: normal;\n`;\n\nconst AccountHeaderInfo = () => {\n  const { activity, stepIndex } = useParams();\n\n  const navigate = useNavigate();\n\n  const isTransferFunds = activitiesEnums.TRANSFERFUNDS === activity;\n  const isIncreasedSavingsBalance = isTransferFunds && stepIndex >= 6;\n  const balance = isIncreasedSavingsBalance ? 800 : 500;\n\n  return (\n    <AccountHeaderContainer>\n      <AccountHeader>Savings</AccountHeader>\n      <AccountNumber>7788 8899-222</AccountNumber>\n      <NotedBalance>${balance}</NotedBalance>\n      <TransactionsDetails />\n    </AccountHeaderContainer>\n  );\n};\n\nconst SavingsHome = () => {\n  return (\n    <BankingContainer>\n      <AccountSectionWrapper>\n        <AccountHeaderInfo />\n        <Outlet />\n      </AccountSectionWrapper>\n    </BankingContainer>\n  );\n};\n\nexport default SavingsHome;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  ContinueButton,\n  ContinueButtonContainer,\n  FormContainer,\n  InputContainer,\n  LabelInputContainer,\n  StyledLabel,\n  StyledNumberFormat,\n  StyledSelect,\n  TransactionSubtitle,\n} from \"../BankPageElements\";\nimport {\n  CHEQUINGACCOUNT,\n  SAVINGSACCOUNT,\n  TRANSFERTYPE,\n  accountPagesEnums,\n  transferFundsEnums,\n  transferFundsSteps,\n} from \"../../enums\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nexport const TransferFunds = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n\n  const [fromAcc, setFromAcc] = useState(undefined);\n  const [toAcc, setToAcc] = useState(undefined);\n  const [payAmt, setPayAmt] = useState(undefined);\n  const [transferType, setTransferType] = useState(undefined);\n\n  const is = (enumStep) => {\n    return transferFundsSteps[stepIndex] === enumStep;\n  };\n\n  const isSelectCheqing = is(transferFundsEnums.selectChequing);\n  const isSelectSavings = is(transferFundsEnums.selectSavings);\n  const isEnterAmount = is(transferFundsEnums.enterAmount);\n  const isTransferType = is(transferFundsEnums.transferType);\n  const isConfirmTransfer = is(transferFundsEnums.confirmTransfer);\n\n  useEffect(() => {\n    if (\n      stepIndex > transferFundsSteps.indexOf(transferFundsEnums.selectChequing)\n    ) {\n      setFromAcc(CHEQUINGACCOUNT);\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (\n      stepIndex > transferFundsSteps.indexOf(transferFundsEnums.selectSavings)\n    ) {\n      setToAcc(SAVINGSACCOUNT);\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (\n      stepIndex > transferFundsSteps.indexOf(transferFundsEnums.enterAmount)\n    ) {\n      setPayAmt(\"$300\");\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (\n      stepIndex > transferFundsSteps.indexOf(transferFundsEnums.transferType)\n    ) {\n      setTransferType(TRANSFERTYPE);\n    }\n  }, [stepIndex]);\n\n  return (\n    <InputContainer>\n      <FormContainer subtitle={\"Transfer Funds\"}>\n        <InfoTip\n          tipContent={<div>Select \"Chequing\"</div>}\n          showTip={isSelectCheqing}\n          showButton={true}\n          buttonDisabled={fromAcc !== CHEQUINGACCOUNT}\n          placement=\"bottom-center\"\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                accountPagesEnums.ACCOUNTS\n              }/${accountPagesEnums.TRANSFERFUNDS}`\n            );\n          }}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel htmlFor=\"from-select\">From Account:</StyledLabel>\n              <StyledSelect\n                value={fromAcc}\n                id=\"from-select\"\n                onChange={(e) => {\n                  setFromAcc(e.target.value);\n                }}\n              >\n                <option value={\"\"} hidden>\n                  Choose Account\n                </option>\n                <option value={CHEQUINGACCOUNT}>{CHEQUINGACCOUNT}</option>\n                <option value={SAVINGSACCOUNT}>{SAVINGSACCOUNT}</option>\n              </StyledSelect>\n            </LabelInputContainer>\n          }\n        />\n\n        <div>\n          <InfoTip\n            tipContent={<div>Select \"Savings\"</div>}\n            showTip={isSelectSavings}\n            showButton={true}\n            buttonDisabled={toAcc !== SAVINGSACCOUNT}\n            placement=\"bottom-center\"\n            onClick={() => {\n              navigate(\n                `/${activity}/${Number(stepIndex) + 1}/${\n                  accountPagesEnums.ACCOUNTS\n                }/${accountPagesEnums.TRANSFERFUNDS}`\n              );\n            }}\n            tipTarget={\n              <div>\n                <StyledLabel htmlFor=\"to-select\">To Account:</StyledLabel>\n                <StyledSelect\n                  id=\"to-select\"\n                  value={toAcc}\n                  onChange={(e) => setToAcc(e.target.value)}\n                >\n                  <option value={\"\"} hidden>\n                    Choose Account\n                  </option>\n                  <option value={CHEQUINGACCOUNT}>{CHEQUINGACCOUNT}</option>\n                  <option value={SAVINGSACCOUNT}>{SAVINGSACCOUNT}</option>\n                </StyledSelect>\n              </div>\n            }\n          />\n        </div>\n        <div>\n          <InfoTip\n            tipContent={<div>Enter $300</div>}\n            showTip={isEnterAmount}\n            showButton={true}\n            buttonDisabled={payAmt !== \"$300\"}\n            placement=\"bottom-center\"\n            onClick={() => {\n              navigate(\n                `/${activity}/${Number(stepIndex) + 1}/${\n                  accountPagesEnums.ACCOUNTS\n                }/${accountPagesEnums.TRANSFERFUNDS}`\n              );\n            }}\n            tipTarget={\n              <div>\n                <StyledLabel htmlFor=\"transfer-amount\">Amount:</StyledLabel>\n                <StyledNumberFormat\n                  id=\"transfer-amount\"\n                  onChange={(e) => setPayAmt(e.target.value)}\n                  prefix={\"$\"}\n                  placeholder=\"Choose Amount\"\n                  value={payAmt}\n                />\n              </div>\n            }\n          />\n        </div>\n        <div>\n          <InfoTip\n            tipContent={\n              <div>Select {TRANSFERTYPE}, as your Transfer Type.</div>\n            }\n            showTip={isTransferType}\n            showButton={true}\n            buttonDisabled={transferType !== TRANSFERTYPE}\n            placement=\"bottom-center\"\n            onClick={() => {\n              navigate(\n                `/${activity}/${Number(stepIndex) + 1}/${\n                  accountPagesEnums.ACCOUNTS\n                }/${accountPagesEnums.TRANSFERFUNDS}`\n              );\n            }}\n            tipTarget={\n              <div>\n                <StyledLabel htmlFor=\"transfer-type\">Transfer Type</StyledLabel>\n                <StyledSelect\n                  value={transferType}\n                  id=\"transfer-type\"\n                  onChange={(e) => setTransferType(e.target.value)}\n                >\n                  <option value={\"\"} hidden>\n                    Select Type\n                  </option>\n                  <option value={TRANSFERTYPE}>One-Time</option>\n                  <option value=\"Recurring\">Recurring</option>\n                  <option value=\"Custom\">Custom</option>\n                </StyledSelect>\n              </div>\n            }\n          />\n        </div>\n        <ContinueButtonContainer>\n          {/* go to all accounts */}\n          <InfoTip\n            tipContent={<div>Click \"Confirm Transfer\".</div>}\n            showTip={isConfirmTransfer}\n            showButton={false}\n            tipTarget={\n              <ContinueButton\n                disabled={!isConfirmTransfer}\n                onClick={() => {\n                  navigate(\n                    `/${activity}/${Number(stepIndex) + 1}/${\n                      accountPagesEnums.ACCOUNTS\n                    }`\n                  );\n                }}\n              >\n                Confirm Transfer\n              </ContinueButton>\n            }\n          />\n        </ContinueButtonContainer>\n      </FormContainer>\n    </InputContainer>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n// import { BasicTooltip, Ba÷sicTipButton, InfoTip } from \"../../Shared/Tip\";\nimport { InfoTip } from \"../Shared/Tip\";\n// import { ModalOverlay, ResponsiveContent } from \"../../Modal\";\nimport { ModalOverlay } from \"../Modal\";\nimport payBillIcon from \"../assets/contract.png\";\nimport depositIcon from \"../assets/piggy-bank.png\";\nimport transferIcon from \"../assets/exchange.png\";\nimport interacIcon from \"../assets/coin.png\";\nimport { mq } from \"../Global\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  accountPagesEnums,\n  activitiesEnums,\n  eTransferEnums,\n  eTransferPagesEnums,\n  eTransferSteps,\n  makingPaymentsEnums,\n  makingPaymentsSteps,\n  paymentPagesEnums,\n} from \"../enums\";\n\nconst TransactionsContainer = styled.div`\n  display: flex;\n  width: 400px;\n  height: 400px;\n  flex-wrap: wrap;\n  background: yellow;\n  ${mq[1]} {\n    width: 300px;\n    height: 300px;\n  }\n`;\n\nconst BankingButton = styled.button`\n  width: 200px;\n  height: 200px;\n  cursor: pointer;\n  ${(p) => p.theme.fonts.extra_small_header};\n  font-weight: normal;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: white;\n  color: black;\n  border: black 1px solid;\n  :disabled {\n    background: white;\n  }\n\n  img {\n    max-height: 50px;\n    padding-bottom: 5px;\n  }\n\n  ${mq[1]} {\n    width: 150px;\n    height: 150px;\n    font-size: 14px;\n  }\n`;\n\nexport const PaymentMethods = ({\n  setPaymentMethodsVisible,\n  setMainPage,\n  // billPaymentsStep,\n  billPaymentsPage,\n}) => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n\n  const isMakingPayments = activitiesEnums.MAKINGPAYMENTS === activity;\n  const isTransferFunds = activitiesEnums.TRANSFERFUNDS === activity;\n  const isEtransfer = activitiesEnums.ETRANSFER === activity;\n\n  const isEtransferStep =\n    isEtransfer && eTransferSteps[stepIndex] === eTransferEnums.chooseETransfer;\n\n  const isBillPayments =\n    isMakingPayments &&\n    makingPaymentsSteps[stepIndex] === makingPaymentsEnums.billPaymentsStep;\n\n  return (\n    <ModalOverlay\n      visible={true}\n      zIndex={1}\n      notOverlayCloseable={true}\n      render={() => (\n        <div>\n          <TransactionsContainer>\n            <InfoTip\n              tipContent={<div>Click on “Transfer”</div>}\n              showTip={isTransferFunds}\n              showButton={false}\n              tipTarget={\n                <BankingButton\n                  onClick={() => {\n                    navigate(\n                      `/${activity}/${Number(stepIndex) + 1}/${\n                        accountPagesEnums.ACCOUNTS\n                      }/${accountPagesEnums.TRANSFERFUNDS}`\n                    );\n                  }}\n                  disabled={!isTransferFunds}\n                >\n                  <img src={transferIcon} alt=\"\" />\n                  Transfer\n                </BankingButton>\n              }\n            />\n            <InfoTip\n              tipContent={<div>Click on 'Pay a Bill'.</div>}\n              showTip={isBillPayments}\n              showButton={false}\n              tipTarget={\n                <BankingButton\n                  onClick={() => {\n                    navigate(\n                      `/${activity}/${Number(stepIndex) + 1}/${\n                        paymentPagesEnums.PAYMENTSHOME\n                      }/${paymentPagesEnums.LISTOFPAYEES}`\n                    );\n                  }}\n                  disabled={!isBillPayments}\n                >\n                  <img src={payBillIcon} alt=\"\" />\n                  Pay a bill\n                </BankingButton>\n              }\n            />\n            <InfoTip\n              tipContent={<div>Click on “Interact E-Transfer”.</div>}\n              showTip={isEtransferStep}\n              showButton={false}\n              tipTarget={\n                <BankingButton\n                  onClick={() => {\n                    navigate(\n                      `/${activity}/${Number(stepIndex) + 1}/${\n                        eTransferPagesEnums.ETHOME\n                      }/${eTransferPagesEnums.ETCONTACTS}`\n                    );\n                  }}\n                  disabled={!isEtransferStep}\n                >\n                  <img src={interacIcon} alt=\"\" />\n                  <div>Interac</div>\n                  <div>E-transfer</div>\n                </BankingButton>\n              }\n            />\n            <BankingButton>\n              <img src={depositIcon} alt=\"\" />\n              Deposit\n            </BankingButton>\n          </TransactionsContainer>\n        </div>\n      )}\n    />\n  );\n};\n","import React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  accountPagesEnums,\n  activitiesEnums,\n  eTransferEnums,\n  eTransferSteps,\n  makingPaymentsEnums,\n  makingPaymentsSteps,\n  transferFundsEnums,\n  transferFundsSteps,\n} from \"../enums\";\nimport { InfoTip } from \"../Shared/Tip\";\n\nconst StyledBankingFooter = styled.div`\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  background: white;\n  height: 75px;\n`;\n\nconst FooterLink = styled.button`\n  width: 140px;\n  margin: 10px;\n  border: none;\n  background: none;\n  border-bottom: 4px solid\n    ${(p) => (p.isActive ? p.theme.colors.ylc_blue : \"transparent\")};\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: grey;\n  ${(p) => p.theme.fonts.body_text};\n  font-size: 18px;\n  cursor: pointer;\n`;\n\nexport const BankingFooter = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n\n  const isMakingPayments = activitiesEnums.MAKINGPAYMENTS === activity;\n  const isTransferFunds = activitiesEnums.TRANSFERFUNDS === activity;\n  const isEtransfer = activitiesEnums.ETRANSFER === activity;\n\n  const isMakingPaymentsStep =\n    isMakingPayments &&\n    makingPaymentsSteps[stepIndex] === makingPaymentsEnums.clickPayments;\n\n  const isTransferFundsStepHome =\n    isTransferFunds &&\n    transferFundsSteps[stepIndex] === transferFundsEnums.goHomeToCheckChequing;\n\n  const isTransferFundsStepPayTransfer =\n    isTransferFunds &&\n    transferFundsSteps[stepIndex] === transferFundsEnums.clickPayTransfer;\n\n  const isEtransferStep =\n    isEtransfer &&\n    eTransferSteps[stepIndex] === eTransferEnums.clickPayTransfer;\n\n  // TODO: Set the isActive bit\n  const isActive = true;\n\n  const SpecificFooterLink = () => {\n    if (isMakingPaymentsStep) {\n      return (\n        <FooterLink\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                accountPagesEnums.ACCOUNTS\n              }`\n            );\n          }}\n          isActive={isActive === \"pay\"}\n          disabled={!isMakingPaymentsStep}\n        >\n          Pay & Transfer\n        </FooterLink>\n      );\n    } else if (isTransferFundsStepPayTransfer) {\n      return (\n        <FooterLink\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                accountPagesEnums.ACCOUNTS\n              }`\n            );\n          }}\n          isActive={isActive === \"pay\"}\n          disabled={!isTransferFundsStepPayTransfer}\n        >\n          Pay & Transfer\n        </FooterLink>\n      );\n    } else {\n      // for etransfer\n      return (\n        <FooterLink\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                accountPagesEnums.ACCOUNTS\n              }`\n            );\n          }}\n          isActive={isActive === \"pay\"}\n          disabled={!isEtransferStep}\n        >\n          Pay & Transfer\n        </FooterLink>\n      );\n    }\n  };\n\n  const PayTransferTip = () => {\n    if (isMakingPaymentsStep) {\n      return (\n        <InfoTip\n          tipContent={<div>Click on Pay & Transfer</div>}\n          tipTarget={<SpecificFooterLink />}\n          placement={\"top-center\"}\n          showTip={isMakingPaymentsStep}\n          showButton={false}\n          noScroll={true}\n        />\n      );\n    } else if (isTransferFundsStepPayTransfer) {\n      return (\n        <InfoTip\n          tipContent={\"Click on “Pay and Transfer\"}\n          tipTarget={<SpecificFooterLink />}\n          placement={\"top-center\"}\n          showTip={isTransferFundsStepPayTransfer}\n          showButton={false}\n          noScroll={true}\n        />\n      );\n    } else {\n      return (\n        <InfoTip\n          tipContent={\"Click on “Pay and Transfer\"}\n          tipTarget={<SpecificFooterLink />}\n          placement={\"top-center\"}\n          showTip={isEtransferStep}\n          showButton={false}\n          noScroll={true}\n        />\n      );\n    }\n  };\n\n  return (\n    <StyledBankingFooter>\n      <InfoTip\n        tipContent={<div>Click \"home\"</div>}\n        showTip={isTransferFundsStepHome}\n        showButton={false}\n        tipTarget={\n          <FooterLink\n            disabled={!isTransferFundsStepHome}\n            onClick={() => {\n              navigate(\n                `/${activity}/${Number(stepIndex) + 1}/${\n                  accountPagesEnums.ACCOUNTS\n                }`\n              );\n            }}\n            isActive={isActive === \"home\"}\n          >\n            Home\n          </FooterLink>\n        }\n      />\n      <PayTransferTip />\n      <FooterLink isActive={isActive === \"more\"}>More</FooterLink>\n    </StyledBankingFooter>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport {\n  BankingBackground,\n  BankingContainer,\n  BankingHeader,\n  CleanBackground,\n} from \"./BankPageElements\";\nimport { MarginedContainer } from \"../Shared/Layout\";\nimport { PaymentMethods } from \"./PaymentMethods\";\nimport {\n  activitiesEnums,\n  eTransferEnums,\n  eTransferSteps,\n  makingPaymentsEnums,\n  makingPaymentsSteps,\n  transferFundsEnums,\n  transferFundsSteps,\n} from \"../enums\";\nimport { BankingFooter } from \"./BankingFooter\";\n\nconst BasePage = () => {\n  let [paymentMethodsOpen, setPaymentMethodsOpen] = useState(false);\n  const { activity, stepIndex } = useParams();\n\n  const isMakingPayments = activitiesEnums.MAKINGPAYMENTS === activity;\n  const isTransferFunds = activitiesEnums.TRANSFERFUNDS === activity;\n  const isEtransfer = activitiesEnums.ETRANSFER === activity;\n\n  // useEffect to control if the modal is open\n  // not best practice, but whatever\n  useEffect(() => {\n    if (\n      (isMakingPayments &&\n        makingPaymentsSteps[stepIndex] ===\n          makingPaymentsEnums.billPaymentsStep) ||\n      (isTransferFunds &&\n        transferFundsSteps[stepIndex] === transferFundsEnums.clickTransfer) ||\n      (isEtransfer &&\n        eTransferSteps[stepIndex] === eTransferEnums.chooseETransfer)\n    ) {\n      setPaymentMethodsOpen(true);\n    } else {\n      setPaymentMethodsOpen(false);\n    }\n  }, [isEtransfer, isMakingPayments, isTransferFunds, stepIndex]);\n\n  return (\n    <>\n      <BankingBackground>\n        <BankingHeader />\n        <CleanBackground>\n          <MarginedContainer>\n            <Outlet />\n          </MarginedContainer>\n        </CleanBackground>\n        <BankingFooter />\n      </BankingBackground>\n      {paymentMethodsOpen && <PaymentMethods />}\n    </>\n  );\n};\n\nexport default BasePage;\n","import React, { useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport { BankingContainer, BillPaymentsContainer } from \"../BankPageElements\";\n\nconst addDays = (date, days) => {\n  const result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n};\n\nexport const PaymentsHome = () => {\n  const [accountType, setAccountType] = useState(undefined);\n  const [billAmount, setBillAmount] = useState(undefined);\n  const [billDate, setBillDate] = useState(addDays(new Date(), 5));\n  return (\n    <BankingContainer>\n      <BillPaymentsContainer>\n        <Outlet\n          context={{\n            accountType,\n            setAccountType,\n            billAmount,\n            setBillAmount,\n            billDate,\n            setBillDate,\n          }}\n        />\n      </BillPaymentsContainer>\n    </BankingContainer>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport { ItemListing } from \"../BankPageElements\";\nimport {\n  activitiesEnums,\n  makingPaymentsEnums,\n  makingPaymentsSteps,\n  paymentPagesEnums,\n} from \"../../enums\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst PayeeControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  padding: 10px 0;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst ChooseText = styled.div`\n  ${(p) => p.theme.fonts.extra_small_header};\n`;\n\nconst AddPayeeButton = styled.button`\n  /* background: ${(p) => p.theme.colors.bank_blue}; */\n  background: white;\n  width: 150px;\n  height: 50px;\n  /* color: white; */\n  cursor: pointer;\n  ${(p) => p.theme.fonts.large_button_text};\n  border-radius: 10px;\n  border: none;\n  color: grey;\n`;\n\nexport const ListOfPayees = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n\n  const isMakingPayments = activitiesEnums.MAKINGPAYMENTS === activity;\n  const isAddEditPayee =\n    isMakingPayments &&\n    makingPaymentsSteps[stepIndex] === makingPaymentsEnums.addEditPayee;\n\n  const isChooseTaco =\n    isMakingPayments &&\n    makingPaymentsSteps[stepIndex] === makingPaymentsEnums.chooseTaco;\n\n  const isTacoAdded = isMakingPayments && stepIndex >= 6;\n\n  return (\n    <div>\n      <PayeeControlsContainer>\n        <ChooseText>Select a Payee</ChooseText>\n        <InfoTip\n          tipContent={<div>Choose \"Add Payee\".</div>}\n          tipTarget={\n            <AddPayeeButton\n              onClick={() => {\n                navigate(\n                  `/${activity}/${Number(stepIndex) + 1}/${\n                    paymentPagesEnums.PAYMENTSHOME\n                  }/${paymentPagesEnums.ADDPAYEE}`\n                );\n              }}\n              disabled={!isAddEditPayee}\n            >\n              Add Payee\n            </AddPayeeButton>\n          }\n          showTip={isAddEditPayee}\n          showButton={false}\n        />\n      </PayeeControlsContainer>\n      {isTacoAdded && (\n        <InfoTip\n          tipContent={\n            <div>\n              <div>\n                You did it! Taco Electric is set up for online bill payments.\n                You just need to pay the bill!\n              </div>\n              <br />\n              <div>\n                Click on \"Taco Electric\". It will take you to a screen where\n                you’ll choose an account, the date of payment and the amount\n                you’re paying.\n              </div>\n            </div>\n          }\n          tipTarget={\n            <ItemListing\n              onClick={() => {\n                // setPaymentStage(payVerifyBillStage);\n                navigate(\n                  `/${activity}/${Number(stepIndex) + 1}/${\n                    paymentPagesEnums.PAYMENTSHOME\n                  }/${paymentPagesEnums.ADDBILL}`\n                );\n              }}\n              principal={\"Taco Electric\"}\n              date={\"1234567\"}\n              details={\"PAY\"}\n              separateDetails={true}\n            />\n          }\n          showTip={isChooseTaco}\n          showButton={false}\n        />\n      )}\n      <ItemListing\n        principal={\"Toyota Canada\"}\n        date={\"20193924UQC685\"}\n        details={\"PAY\"}\n        separateDetails={true}\n      />\n      <ItemListing\n        principal={\"Bell Canada\"}\n        date={\"9988225511\"}\n        details={\"PAY\"}\n        separateDetails={true}\n      />\n      <ItemListing\n        principal={\"NSLSC\"}\n        date={\"088811\"}\n        details={\"PAY\"}\n        separateDetails={true}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BillPayeeInput,\n  BoldDiv,\n  ContinueButton,\n  ContinueButtonContainer,\n  TransactionSubtitle,\n} from \"../BankPageElements\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport {\n  ACCOUNTNUMBER,\n  TACOTITLE,\n  makingPaymentsEnums,\n  makingPaymentsSteps,\n  paymentPagesEnums,\n} from \"../../enums\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nexport const AddPayee = () => {\n  const [companyTitle, setCompanyTitle] = useState(\"\");\n  const [inputedAccountNumber, setInputedAccountNumber] = useState(\"\");\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n\n  const isAddCompanyName =\n    makingPaymentsSteps[stepIndex] === makingPaymentsEnums.addCompanyName;\n\n  const isAddBillNumber =\n    makingPaymentsSteps[stepIndex] === makingPaymentsEnums.addBillNumber;\n\n  const isGoToVerify =\n    makingPaymentsSteps[stepIndex] === makingPaymentsEnums.goToVerify;\n\n  useEffect(() => {\n    if (\n      stepIndex >\n      makingPaymentsSteps.indexOf(makingPaymentsEnums.addCompanyName)\n    ) {\n      setCompanyTitle(TACOTITLE);\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (\n      stepIndex >\n      makingPaymentsSteps.indexOf(makingPaymentsEnums.isAddBillNumber)\n    ) {\n      setInputedAccountNumber(ACCOUNTNUMBER);\n    }\n  }, [stepIndex]);\n\n  return (\n    <div>\n      <div>\n        <div>\n          <TransactionSubtitle>Add a New Payee</TransactionSubtitle>\n          <InfoTip\n            tipContent={\n              <div>\n                Enter company name: <strong>Taco Electric</strong>\n              </div>\n            }\n            buttonDisabled={companyTitle !== TACOTITLE}\n            onClick={() => {\n              navigate(\n                `/${activity}/${Number(stepIndex) + 1}/${\n                  paymentPagesEnums.PAYMENTSHOME\n                }/${paymentPagesEnums.ADDPAYEE}`\n              );\n            }}\n            tipTarget={\n              <BillPayeeInput\n                onChange={(e) => setCompanyTitle(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter Payee Name\"\n                value={companyTitle}\n                disabled={!isAddCompanyName}\n              />\n            }\n            showTip={isAddCompanyName}\n            showButton={true}\n          />\n        </div>\n        <div>\n          <InfoTip\n            tipContent={\n              <div>\n                Now enter account/bill number. Your account number can typically\n                be found in the top right corner of your bill. Typically, it is\n                a 7-digit number. For this activity enter:\n                <BoldDiv>{ACCOUNTNUMBER}</BoldDiv>\n                {/* <span role=\"img\" aria-label=\"smile emoji\">\n              🙂\n            </span> */}\n              </div>\n            }\n            onClick={() => {\n              navigate(\n                `/${activity}/${Number(stepIndex) + 1}/${\n                  paymentPagesEnums.PAYMENTSHOME\n                }/${paymentPagesEnums.ADDPAYEE}`\n              );\n            }}\n            buttonDisabled={inputedAccountNumber !== ACCOUNTNUMBER}\n            tipTarget={\n              <label>\n                <BillPayeeInput\n                  onChange={(e) => setInputedAccountNumber(e.target.value)}\n                  placeholder={\"Enter Account/Bill Number\"}\n                  value={inputedAccountNumber}\n                  disabled={!isAddBillNumber}\n                />\n              </label>\n            }\n            showTip={isAddBillNumber}\n            showButton={true}\n          />\n        </div>\n      </div>\n      <ContinueButtonContainer>\n        <InfoTip\n          tipContent={<div>Choose \"Continue\" to review your new payee.</div>}\n          tipTarget={\n            <ContinueButton\n              onClick={() => {\n                // setVerifyPayee(true);\n                navigate(\n                  `/${activity}/${Number(stepIndex) + 1}/${\n                    paymentPagesEnums.PAYMENTSHOME\n                  }/${paymentPagesEnums.VERIFYPAYEE}`\n                );\n              }}\n              disabled={!isGoToVerify}\n            >\n              Continue\n            </ContinueButton>\n          }\n          showTip={isGoToVerify}\n          showButton={false}\n        />\n      </ContinueButtonContainer>\n    </div>\n  );\n};\n","import React from \"react\";\n// import styled from \"styled-components\";\n// import { BasicTooltip, BasicTipButton, InfoTip } from \"../../Shared/Tip\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport {\n  TransactionSubtitle,\n  BillPayeeReview,\n  ContinueButton,\n  ContinueButtonContainer,\n} from \"../BankPageElements\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  activitiesEnums,\n  makingPaymentsEnums,\n  makingPaymentsSteps,\n  paymentPagesEnums,\n} from \"../../enums\";\n\nexport const VerifyPayee = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n\n  const isMakingPayments = activitiesEnums.MAKINGPAYMENTS === activity;\n\n  const isConfirmPayee =\n    isMakingPayments &&\n    makingPaymentsSteps[stepIndex] === makingPaymentsEnums.confirmPayee;\n\n  return (\n    <div>\n      <TransactionSubtitle>Review the new payee</TransactionSubtitle>\n      <BillPayeeReview>Company Name: Taco Electric</BillPayeeReview>\n      <BillPayeeReview>Account/Bill Number: 1234567</BillPayeeReview>\n      <ContinueButtonContainer>\n        <InfoTip\n          tipContent={\n            <div>\n              Verify everything is correct. It should say the payee name and\n              account number entered. Choose \"Add Payee\" to continue.\n            </div>\n          }\n          tipTarget={\n            <ContinueButton\n              onClick={() => {\n                // setTacoAdded(true);\n                // setPaymentStage(payeesStage);\n                navigate(\n                  `/${activity}/${Number(stepIndex) + 1}/${\n                    paymentPagesEnums.PAYMENTSHOME\n                  }/${paymentPagesEnums.LISTOFPAYEES}`\n                );\n              }}\n              disabled={!isConfirmPayee}\n            >\n              Add Payee\n            </ContinueButton>\n          }\n          showTip={isConfirmPayee}\n          showButton={false}\n        />\n      </ContinueButtonContainer>\n    </div>\n  );\n};\n","export const getFormattedBillDate = (billDate) => {\n  const [bMonth, bDay, bYear] = billDate\n    ? billDate.toLocaleDateString(\"en-US\").split(\"/\")\n    : [];\n  return `${bMonth}/${bDay}/${bYear}`;\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  TransactionSubtitle,\n  ContinueButton,\n  ContinueButtonContainer,\n  StyledSelect,\n  OldStyledSelect,\n  BoldDiv,\n} from \"../BankPageElements\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport styled from \"styled-components\";\nimport { useNavigate, useOutletContext, useParams } from \"react-router-dom\";\nimport {\n  CHEQUINGACCOUNT,\n  BILLAMOUNT,\n  makingPaymentsEnums,\n  makingPaymentsSteps,\n  paymentPagesEnums,\n} from \"../../enums\";\nimport { getFormattedBillDate } from \"./shared\";\n\nconst StyledNumberFormat = styled(NumberFormat)`\n  width: calc(100% - 40px - 2px - 100px);\n  border: none;\n  padding: 20px;\n  margin: 0 50px;\n  border-bottom: 1px solid lightgray;\n  border-top: 1px solid lightgray;\n  ${(p) => p.theme.fonts.body_text_bold};\n`;\n\nconst StyledDatePicker = styled(DatePicker)`\n  /* width: calc(100% - 40px - 2px - 100px); */\n  border: none;\n  padding: 20px;\n  margin: 0 50px;\n  ${(p) => p.theme.fonts.body_text_bold};\n`;\n\nconst DateContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: calc(100% - 40px - 2px - 100px);\n  padding: 20px;\n  margin: 0 50px;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst LightOption = styled.option`\n  /* color: lightgray !important; */\n`;\n\nexport const AddBill = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n\n  const {\n    accountType,\n    setAccountType,\n    billAmount,\n    setBillAmount,\n    billDate,\n    setBillDate,\n  } = useOutletContext();\n\n  let [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  const todayDate = `${month}/${day}/${year}`;\n\n  const isPay = (enumStep) => {\n    return makingPaymentsSteps[stepIndex] === enumStep;\n  };\n\n  const isChooseDebitAccount = isPay(makingPaymentsEnums.chooseDebitAccount);\n  const isEnterAmount = isPay(makingPaymentsEnums.enterAmount);\n  const isEnterDate = isPay(makingPaymentsEnums.enterDate);\n  const isReview = isPay(makingPaymentsEnums.reviewBillPayment);\n\n  useEffect(() => {\n    if (\n      stepIndex >\n      makingPaymentsSteps.indexOf(makingPaymentsEnums.chooseDebitAccount)\n    ) {\n      setAccountType(CHEQUINGACCOUNT);\n    }\n  }, [setAccountType, stepIndex]);\n\n  useEffect(() => {\n    if (\n      stepIndex > makingPaymentsSteps.indexOf(makingPaymentsEnums.enterAmount)\n    ) {\n      setBillAmount(BILLAMOUNT);\n    }\n  }, [setBillAmount, stepIndex]);\n\n  return (\n    <div>\n      <TransactionSubtitle>Pay Taco Electric</TransactionSubtitle>\n      <div>\n        <InfoTip\n          tipContent={\n            <div>\n              <div>\n                Choose the account that you would like to pay the bill with.\n              </div>\n              <br />\n              <div>\n                For this activity, choose: <BoldDiv>{CHEQUINGACCOUNT}</BoldDiv>\n              </div>\n            </div>\n          }\n          placement={\"bottom-center\"}\n          tipTarget={\n            <OldStyledSelect\n              value={accountType}\n              onChange={(e) => setAccountType(e.target.value)}\n            >\n              <LightOption value=\"\">Select Account</LightOption>\n              <option value={CHEQUINGACCOUNT}>{CHEQUINGACCOUNT}</option>\n              <option value=\"Saving\">Saving</option>\n            </OldStyledSelect>\n          }\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                paymentPagesEnums.PAYMENTSHOME\n              }/${paymentPagesEnums.ADDBILL}`\n            );\n          }}\n          showTip={isChooseDebitAccount}\n          buttonDisabled={accountType !== \"Chequing\"}\n          showButton={true}\n        />\n      </div>\n      <div>\n        <InfoTip\n          tipContent={\n            <div>\n              <div>\n                Enter the amount you would like pay. For this activity, enter:{\" \"}\n                <BoldDiv>{BILLAMOUNT}</BoldDiv>{\" \"}\n              </div>\n            </div>\n          }\n          tipTarget={\n            <StyledNumberFormat\n              onChange={(e) => setBillAmount(e.target.value)}\n              prefix={\"$\"}\n              placeholder=\"Enter Amount\"\n              value={billAmount}\n            />\n          }\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                paymentPagesEnums.PAYMENTSHOME\n              }/${paymentPagesEnums.ADDBILL}`\n            );\n          }}\n          showTip={isEnterAmount}\n          buttonDisabled={billAmount !== `$${BILLAMOUNT}`}\n          showButton={true}\n        />\n      </div>\n      <div>\n        <InfoTip\n          tipContent={\n            <div>\n              <div>Enter the date you would like to pay the bill.</div>\n              <br />\n              <div>For this activity, enter today's date.</div>\n            </div>\n          }\n          tipTarget={\n            <DateContainer>\n              <div>Select Date:</div>\n              <StyledDatePicker\n                selected={billDate}\n                onChange={(date) => setBillDate(date)}\n                todayButton=\"Today\"\n                value={billDate}\n              />\n            </DateContainer>\n          }\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                paymentPagesEnums.PAYMENTSHOME\n              }/${paymentPagesEnums.ADDBILL}`\n            );\n          }}\n          showTip={isEnterDate}\n          placement={\"top-center\"}\n          buttonDisabled={todayDate !== getFormattedBillDate(billDate)}\n          showButton={true}\n        />\n      </div>\n      <ContinueButtonContainer>\n        <InfoTip\n          tipContent={<div>Click 'Continue' to review your bill payment.</div>}\n          tipTarget={\n            <ContinueButton\n              onClick={() => {\n                // setVerifyBill(true);\n                // setStep(step + 1);\n                navigate(\n                  `/${activity}/${Number(stepIndex) + 1}/${\n                    paymentPagesEnums.PAYMENTSHOME\n                  }/${paymentPagesEnums.VERIFYBILL}`\n                );\n              }}\n              disabled={!isReview}\n            >\n              Continue\n            </ContinueButton>\n          }\n          showTip={isReview}\n          showButton={false}\n        />\n      </ContinueButtonContainer>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { InfoTip } from \"../../Shared/Tip\";\n\nimport {\n  TransactionSubtitle,\n  BillPayeeReview,\n  ContinueButton,\n  ContinueButtonContainer,\n} from \"../BankPageElements\";\nimport { useOutletContext, useParams } from \"react-router-dom\";\nimport {\n  CHEQUINGACCOUNT,\n  BILLAMOUNT,\n  TACOTITLE,\n  activitiesEnums,\n  makingPaymentsEnums,\n  makingPaymentsSteps,\n} from \"../../enums\";\nimport { IntroModalContext } from \"../../context\";\nimport { getFormattedBillDate } from \"./shared\";\n\nexport const VerifyBill = () => {\n  const {\n    accountType,\n    setAccountType,\n    billAmount,\n    setBillAmount,\n    billDate,\n    setBillDate,\n  } = useOutletContext();\n  const { activity, stepIndex } = useParams();\n  const { introModalState, setIntroContext } = useContext(IntroModalContext);\n\n  const isMakingPayments = activitiesEnums.MAKINGPAYMENTS === activity;\n\n  const isConfirmBillPayment =\n    isMakingPayments &&\n    makingPaymentsSteps[stepIndex] === makingPaymentsEnums.confirmBillPayment;\n\n  // let [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  // const todayDate = `${month}/${day}/${year}`;\n  // const [bMonth, bDay, bYear] = billDate\n  //   ? billDate.toLocaleDateString(\"en-US\").split(\"/\")\n  //   : [];\n  // const formattedBillDate = `${bMonth}/${bDay}/${bYear}`;\n\n  if (!accountType) {\n    setAccountType(CHEQUINGACCOUNT);\n  }\n\n  if (!billAmount) {\n    setBillAmount(BILLAMOUNT);\n  }\n\n  if (!billDate) {\n    let [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n    const todayDate = `${month}/${day}/${year}`;\n\n    setBillDate(todayDate);\n  }\n\n  return (\n    <div>\n      <TransactionSubtitle>Verify Payment Information</TransactionSubtitle>\n      <BillPayeeReview>Payee: {TACOTITLE}</BillPayeeReview>\n      <BillPayeeReview>Account: {accountType}</BillPayeeReview>\n      <BillPayeeReview>Amount: {billAmount}</BillPayeeReview>\n      <BillPayeeReview>\n        Payment Date: {getFormattedBillDate(billDate)}\n      </BillPayeeReview>\n      <ContinueButtonContainer>\n        <InfoTip\n          tipContent={\n            <div>\n              Review what you have entered and then press the ‘Confirm Payment’\n              button.\n            </div>\n          }\n          tipTarget={\n            <ContinueButton\n              onClick={() => {\n                //Final Step\n                setIntroContext({ isVisible: true, isIntro: false });\n              }}\n            >\n              Confirm Payment\n            </ContinueButton>\n          }\n          showTip={isConfirmBillPayment}\n          showButton={false}\n        />\n      </ContinueButtonContainer>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  BoldDiv,\n  ContinueButton,\n  ContinueButtonContainer,\n  FormContainer,\n  InputContainer,\n  LabelInputContainer,\n  StyledLabel,\n  StyledTextInput,\n  TransactionSubtitle,\n} from \"../BankPageElements\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport {\n  LANDLORDEMAIL,\n  LANDLORDNAME,\n  eTransferEnums,\n  eTransferPagesEnums,\n  eTransferSteps,\n} from \"../../enums\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst AddContact = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n  const [inputName, setInputName] = useState(undefined);\n  const [inputEmail, setInputEmail] = useState(undefined);\n\n  const is = (enumType) => {\n    return eTransferSteps[stepIndex] === enumType;\n  };\n\n  const isEnterName = is(eTransferEnums.enterName);\n  const isEnterEmail = is(eTransferEnums.enterEmail);\n  const isAddContact = is(eTransferEnums.addContact);\n\n  useEffect(() => {\n    if (stepIndex > eTransferSteps.indexOf(eTransferEnums.enterName)) {\n      setInputName(LANDLORDNAME);\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (stepIndex > eTransferSteps.indexOf(eTransferEnums.enterEmail)) {\n      setInputEmail(LANDLORDEMAIL);\n    }\n  }, [stepIndex]);\n\n  return (\n    <InputContainer>\n      <FormContainer subtitle={\"Add New Contact\"}>\n        <InfoTip\n          placement=\"bottom-center\"\n          tipContent={\n            <div>\n              Enter the name of the person you will be sending the money too, if\n              you have multiple people with the same name or don’t know\n              someone’s full name you can put a descriptive word to describe\n              them. Enter Name:\n              <BoldDiv>{LANDLORDNAME}</BoldDiv>\n            </div>\n          }\n          showTip={isEnterName}\n          buttonDisabled={inputName !== LANDLORDNAME || !isEnterName}\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                eTransferPagesEnums.ETHOME\n              }/${eTransferPagesEnums.ETADDCONTACT}`\n            );\n          }}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel htmlFor=\"name\" width={\"50px\"}>\n                Name:{\" \"}\n              </StyledLabel>\n              <StyledTextInput\n                id=\"name\"\n                type=\"text\"\n                width={\"300px\"}\n                onChange={(e) => {\n                  setInputName(e.target.value);\n                }}\n                value={inputName}\n                placeholder=\"Insert Name Here\"\n              />\n            </LabelInputContainer>\n          }\n        />\n        <InfoTip\n          placement=\"bottom-center\"\n          tipContent={\n            <div>\n              Now enter the email address of the person receiving the money for\n              this activity enter: <BoldDiv>{LANDLORDEMAIL}</BoldDiv>\n            </div>\n          }\n          showTip={isEnterEmail}\n          buttonDisabled={inputEmail !== LANDLORDEMAIL || !isEnterEmail}\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                eTransferPagesEnums.ETHOME\n              }/${eTransferPagesEnums.ETADDCONTACT}`\n            );\n          }}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel htmlFor=\"email\" width={\"50px\"}>\n                Email:{\" \"}\n              </StyledLabel>\n              <StyledTextInput\n                onChange={(e) => setInputEmail(e.target.value)}\n                value={inputEmail}\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"Insert Email Here\"\n              />\n            </LabelInputContainer>\n          }\n        />\n\n        <ContinueButtonContainer>\n          <InfoTip\n            tipContent={<div>Choose \"Add Contact\"</div>}\n            showTip={isAddContact}\n            showButton={false}\n            tipTarget={\n              <ContinueButton\n                disabled={!isAddContact}\n                onClick={() => {\n                  navigate(\n                    `/${activity}/${Number(stepIndex) + 1}/${\n                      eTransferPagesEnums.ETHOME\n                    }/${eTransferPagesEnums.ETCONTACTS}`\n                  );\n                }}\n              >\n                Add Contact\n              </ContinueButton>\n            }\n          />\n        </ContinueButtonContainer>\n      </FormContainer>\n    </InputContainer>\n  );\n};\n\nexport default AddContact;\n","import React from \"react\";\nimport {\n  BankingContainer,\n  BillPaymentsContainer,\n  BoldDiv,\n  ItemListing,\n  TransactionSubtitle,\n} from \"../BankPageElements\";\nimport plus from \"../../assets/plus.png\";\nimport styled from \"styled-components\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport {\n  LANDLORDEMAIL,\n  LANDLORDNAME,\n  activitiesEnums,\n  eTransferEnums,\n  eTransferPagesEnums,\n  eTransferSteps,\n} from \"../../enums\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst AddContactContainer = styled.div`\n  width: calc(100% - 60px);\n  height: 50px;\n  margin: 0 30px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  /* border-bottom: solid 1px ${(p) =>\n    p.isSummary ? \"transparent\" : \"lightgray\"}; */\n`;\n\nconst PlusContainer = styled.div`\n  width: 30px;\n  height: 30px;\n  padding-right: 20px;\n  img {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nconst AddContactText = styled.div`\n  ${(p) => p.theme.fonts.body_text_bold}\n`;\n\nconst AddContact = ({ onClick, disabled }) => {\n  return (\n    <AddContactContainer {...{ onClick, disabled }}>\n      <PlusContainer>\n        <img src={plus} alt=\"\" />\n      </PlusContainer>\n\n      <AddContactText>Add A New Contact</AddContactText>\n    </AddContactContainer>\n  );\n};\n\nconst Contacts = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n  const isEtransfer = activitiesEnums.ETRANSFER === activity;\n\n  const isAddNewContact =\n    eTransferSteps[stepIndex] === eTransferEnums.addNewContact;\n\n  const isSelectNewContact =\n    eTransferSteps[stepIndex] === eTransferEnums.chooseNewContact;\n\n  const isNewContact = isEtransfer && stepIndex >= 5;\n\n  return (\n    <BankingContainer>\n      <BillPaymentsContainer>\n        <TransactionSubtitle>Select A Contact</TransactionSubtitle>\n        <InfoTip\n          tipContent={<div>Choose \"Add A New Contact\".</div>}\n          showButton={false}\n          showTip={isAddNewContact}\n          tipTarget={\n            <AddContact\n              disabled={!isAddNewContact}\n              onClick={() => {\n                navigate(\n                  `/${activity}/${Number(stepIndex) + 1}/${\n                    eTransferPagesEnums.ETHOME\n                  }/${eTransferPagesEnums.ETADDCONTACT}`\n                );\n              }}\n            />\n          }\n        />\n        {isNewContact && (\n          <InfoTip\n            tipContent={\n              <div>\n                Select your new contact: <BoldDiv>{LANDLORDNAME}</BoldDiv>\n              </div>\n            }\n            showTip={isSelectNewContact}\n            showButton={false}\n            placement=\"bottom-center\"\n            tipTarget={\n              <ItemListing\n                principal={LANDLORDNAME}\n                date={LANDLORDEMAIL}\n                details={\"\"}\n                separateDetails={true}\n                lowercase\n                disabled={!isSelectNewContact}\n                onClick={() => {\n                  navigate(\n                    `/${activity}/${Number(stepIndex) + 1}/${\n                      eTransferPagesEnums.ETHOME\n                    }/${eTransferPagesEnums.SENDETRANSFER}`\n                  );\n                }}\n              />\n            }\n          />\n        )}\n        <ItemListing\n          principal={\"Mom\"}\n          date={\"mymom@gmail.com\"}\n          details={\"\"}\n          separateDetails={true}\n          lowercase\n        />\n        <ItemListing\n          principal={\"Neighbour Phil\"}\n          date={\"neighbourphil@gmail.com\"}\n          details={\"\"}\n          separateDetails={true}\n          lowercase\n        />\n        <ItemListing\n          principal={\"Piano Teacher\"}\n          date={\"pianoteacher@gmail.com\"}\n          details={\"\"}\n          separateDetails={true}\n          lowercase\n        />\n      </BillPaymentsContainer>\n    </BankingContainer>\n  );\n};\n\nexport default Contacts;\n","import React, { useEffect, useState } from \"react\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport {\n  BoldDiv,\n  ContinueButton,\n  ContinueButtonContainer,\n  FormContainer,\n  InputContainer,\n  LabelInputContainer,\n  StyledLabel,\n  StyledNumberFormat,\n  StyledSelect,\n  StyledTextInput,\n  TransactionSubtitle,\n} from \"../BankPageElements\";\nimport styled from \"styled-components\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  CHEQUINGACCOUNT,\n  EXTRAMESSAGE,\n  LANDLORDAMT,\n  SAVINGSACCOUNT,\n  SECRETA,\n  SECRETQ,\n  eTransferEnums,\n  eTransferPagesEnums,\n  eTransferSteps,\n} from \"../../enums\";\n\nconst SendETransfer = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n  const [payAmt, setPayAmt] = useState(undefined);\n  const [fromAcc, setFromAcc] = useState(undefined);\n  const [secretQInput, setSecretQ] = useState(undefined);\n  const [secretAInput, setSecretA] = useState(undefined);\n  const [answer2, setAnswer2] = useState(undefined);\n  const [messageInput, setMessage] = useState(undefined);\n  // const [message, setMessage] = useState(undefined);\n\n  const is = (enumStep) => {\n    return eTransferSteps[stepIndex] === enumStep;\n  };\n\n  const isEnterAmount = is(eTransferEnums.enterAmount);\n  const isChooseAccount = is(eTransferEnums.chooseAccount);\n  const isChooseSecurityQ = is(eTransferEnums.chooseSecurityQuestion);\n  const isEnterSecurityA = is(eTransferEnums.enterQuestionAnswer);\n  const isReenterA = is(eTransferEnums.reEnterAnswer);\n  const isAddMessage = is(eTransferEnums.addMessage);\n  const isAddPersonal = is(eTransferEnums.addPersonalInfo);\n  const isGoToSummary = is(eTransferEnums.goToSummary);\n\n  useEffect(() => {\n    if (stepIndex > eTransferSteps.indexOf(eTransferEnums.enterAmount)) {\n      setPayAmt(LANDLORDAMT);\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (stepIndex > eTransferSteps.indexOf(eTransferEnums.chooseAccount)) {\n      setFromAcc(CHEQUINGACCOUNT);\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (\n      stepIndex > eTransferSteps.indexOf(eTransferEnums.chooseSecurityQuestion)\n    ) {\n      setSecretQ(SECRETQ);\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (\n      stepIndex > eTransferSteps.indexOf(eTransferEnums.enterQuestionAnswer)\n    ) {\n      setSecretA(SECRETA);\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (stepIndex > eTransferSteps.indexOf(eTransferEnums.reEnterAnswer)) {\n      setAnswer2(SECRETA);\n    }\n  }, [stepIndex]);\n\n  useEffect(() => {\n    if (stepIndex > eTransferSteps.indexOf(eTransferEnums.addMessage)) {\n      setMessage(EXTRAMESSAGE);\n    }\n  }, [stepIndex]);\n\n  return (\n    <InputContainer>\n      <FormContainer subtitle={\"Enter E-Transfer Details\"}>\n        <InfoTip\n          tipContent={\n            <div>\n              Enter amount to transfer. For this exercise enter:{\" \"}\n              <BoldDiv>{LANDLORDAMT}</BoldDiv>\n            </div>\n          }\n          showTip={isEnterAmount}\n          showButton={true}\n          buttonDisabled={payAmt !== LANDLORDAMT}\n          placement=\"bottom-center\"\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                eTransferPagesEnums.ETHOME\n              }/${eTransferPagesEnums.SENDETRANSFER}`\n            );\n          }}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel width={\"200px\"} htmlFor=\"transfer-amount\">\n                Amount:\n              </StyledLabel>\n              <StyledNumberFormat\n                id=\"transfer-amount\"\n                onChange={(e) => setPayAmt(e.target.value)}\n                prefix={\"$\"}\n                placeholder=\"Choose Amount\"\n                value={payAmt}\n                disabled={!isEnterAmount}\n              />\n            </LabelInputContainer>\n          }\n        />\n        <InfoTip\n          tipContent={<div>Select \"Chequing\"</div>}\n          showTip={isChooseAccount}\n          showButton={true}\n          buttonDisabled={fromAcc !== CHEQUINGACCOUNT}\n          placement=\"bottom-center\"\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                eTransferPagesEnums.ETHOME\n              }/${eTransferPagesEnums.SENDETRANSFER}`\n            );\n          }}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel width={\"200px\"} htmlFor=\"from-select\">\n                From Account:\n              </StyledLabel>\n              <StyledSelect\n                value={fromAcc}\n                id=\"from-select\"\n                onChange={(e) => {\n                  setFromAcc(e.target.value);\n                }}\n              >\n                <option value={\"\"} hidden>\n                  Choose Account\n                </option>\n                <option value={CHEQUINGACCOUNT}>{CHEQUINGACCOUNT}</option>\n                <option value={SAVINGSACCOUNT}>{SAVINGSACCOUNT}</option>\n              </StyledSelect>\n            </LabelInputContainer>\n          }\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              A security question is an added safety measure to ensure your\n              funds will be received by the correct person. Choose something\n              that is unique to the person you are sending it to. Sometimes this\n              option will not appear if the person you are sending the money to\n              has their account set up for auto deposit. For this exercise,\n              enter this security question:\n              <BoldDiv>{SECRETQ}</BoldDiv>\n            </div>\n          }\n          showTip={isChooseSecurityQ}\n          showButton={true}\n          buttonDisabled={secretQInput !== SECRETQ}\n          placement=\"bottom-center\"\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                eTransferPagesEnums.ETHOME\n              }/${eTransferPagesEnums.SENDETRANSFER}`\n            );\n          }}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel width={\"200px\"} htmlFor=\"secretQ\">\n                Security Question:\n              </StyledLabel>\n              <StyledTextInput\n                width={\"250px\"}\n                id=\"secretQ\"\n                type=\"text\"\n                onChange={(e) => {\n                  setSecretQ(e.target.value);\n                }}\n                value={secretQInput}\n                disabled={!isChooseSecurityQ}\n                placeholder=\"Enter Security Question\"\n              />\n            </LabelInputContainer>\n          }\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              Now enter the answer to the question. For this exercise, enter:\n              <BoldDiv>{SECRETA}</BoldDiv>\n            </div>\n          }\n          showTip={isEnterSecurityA}\n          showButton={true}\n          buttonDisabled={secretAInput !== SECRETA}\n          placement=\"bottom-center\"\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                eTransferPagesEnums.ETHOME\n              }/${eTransferPagesEnums.SENDETRANSFER}`\n            );\n          }}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel width={\"200px\"} htmlFor=\"secretA\">\n                Security Answer:\n              </StyledLabel>\n              <StyledTextInput\n                id=\"secretA\"\n                type=\"text\"\n                onChange={(e) => {\n                  setSecretA(e.target.value);\n                }}\n                value={secretAInput}\n                disabled={!isEnterSecurityA}\n                placeholder=\"Enter Answer\"\n              />\n            </LabelInputContainer>\n          }\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              Reenter the answer to confirm that it is correct. As a reminder,\n              it is: <strong>{SECRETA}</strong>\n            </div>\n          }\n          showTip={isReenterA}\n          showButton={true}\n          buttonDisabled={answer2 !== SECRETA}\n          placement=\"bottom-center\"\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                eTransferPagesEnums.ETHOME\n              }/${eTransferPagesEnums.SENDETRANSFER}`\n            );\n          }}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel width={\"200px\"} htmlFor=\"reenter\">\n                Reenter Answer:\n              </StyledLabel>\n              <StyledTextInput\n                id=\"reenter\"\n                type=\"text\"\n                onChange={(e) => {\n                  setAnswer2(e.target.value);\n                }}\n                value={answer2}\n                disabled={!isReenterA}\n                placeholder=\"Reenter Answer\"\n              />\n            </LabelInputContainer>\n          }\n        />\n        <InfoTip\n          tipContent={\n            <div>\n              Adding a message is optional but can sometimes be helpful for\n              records. In this case, it can be helpful to keep track of your\n              payments to ensure you are not falling behind. For this exercise,\n              enter:\n              <BoldDiv>{EXTRAMESSAGE}</BoldDiv>\n            </div>\n          }\n          showTip={isAddMessage}\n          showButton={true}\n          buttonDisabled={messageInput !== EXTRAMESSAGE}\n          placement=\"bottom-center\"\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                eTransferPagesEnums.ETHOME\n              }/${eTransferPagesEnums.SENDETRANSFER}`\n            );\n          }}\n          tipTarget={\n            <LabelInputContainer>\n              <StyledLabel width={\"200px\"} htmlFor=\"messageOptional\">\n                Message (optional):\n              </StyledLabel>\n              <StyledTextInput\n                id=\"messageOptional\"\n                type=\"text\"\n                onChange={(e) => {\n                  setMessage(e.target.value);\n                }}\n                value={messageInput}\n                disabled={!isAddMessage}\n                placeholder=\"Enter Message\"\n              />\n            </LabelInputContainer>\n          }\n        />\n        <LabelInputContainer>\n          <StyledLabel width={\"200px\"} htmlFor=\"personalInfo\">\n            Your information:\n          </StyledLabel>\n          <StyledTextInput\n            id=\"personalInfo\"\n            type=\"text\"\n            onChange={(e) => {\n              setMessage(e.target.value);\n            }}\n            value={\"heyitsme@email.com\"}\n            disabled={true}\n          />\n        </LabelInputContainer>\n        <ContinueButtonContainer>\n          <InfoTip\n            tipContent={<div>Choose \"Continue\"</div>}\n            showTip={isGoToSummary}\n            showButton={false}\n            tipTarget={\n              <ContinueButton\n                disabled={!isGoToSummary}\n                onClick={() => {\n                  navigate(\n                    `/${activity}/${Number(stepIndex) + 1}/${\n                      eTransferPagesEnums.ETHOME\n                    }/${eTransferPagesEnums.VERIFYETRANSFER}`\n                  );\n                }}\n              >\n                Continue\n              </ContinueButton>\n            }\n          />\n        </ContinueButtonContainer>\n      </FormContainer>\n    </InputContainer>\n  );\n};\n\nexport default SendETransfer;\n","import React, { useContext, useState } from \"react\";\nimport { InfoTip } from \"../../Shared/Tip\";\nimport {\n  BoldDiv,\n  ContinueButton,\n  ContinueButtonContainer,\n  FormContainer,\n  InputContainer,\n  StyledLabel,\n  StyledNumberFormat,\n  StyledSelect,\n  StyledTextInput,\n  TransactionSubtitle,\n} from \"../BankPageElements\";\nimport styled from \"styled-components\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  CHEQUINGACCOUNT,\n  EXTRAMESSAGE,\n  LANDLORDAMT,\n  SAVINGSACCOUNT,\n  SECRETA,\n  SECRETQ,\n  eTransferEnums,\n  eTransferPagesEnums,\n  eTransferSteps,\n} from \"../../enums\";\nimport { IntroModalContext } from \"../../context\";\nconst Container = styled.div`\n  /* min-height: calc(100vh - 150px); */\n  background: white;\n  padding-bottom: 50px;\n`;\n\nconst FullEmptyDiv = styled.div`\n  width: 100%;\n  height: 10px;\n`;\n\nconst VerifyETransfer = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n\n  const { introModalState, setIntroContext } = useContext(IntroModalContext);\n\n  const is = (enumStep) => {\n    return eTransferSteps[stepIndex] === enumStep;\n  };\n\n  const isReview = is(eTransferEnums.reviewSummary);\n  const isSend = is(eTransferEnums.clickSend);\n\n  return (\n    <InputContainer>\n      <FormContainer subtitle={\"Enter E-Transfer Details\"}>\n        <InfoTip\n          tipContent={\n            <div>\n              Review the summary of the E-Transfer before ending to ensure all\n              information is correct\n            </div>\n          }\n          showTip={isReview}\n          placement={\"center\"}\n          showArrow={false}\n          onClick={() => {\n            navigate(\n              `/${activity}/${Number(stepIndex) + 1}/${\n                eTransferPagesEnums.ETHOME\n              }/${eTransferPagesEnums.VERIFYETRANSFER}`\n            );\n          }}\n          tipTarget={<FullEmptyDiv />}\n        />\n        <div>\n          <StyledLabel width={\"200px\"} htmlFor=\"from-select\">\n            Amount:\n          </StyledLabel>\n          <StyledNumberFormat\n            prefix={\"$\"}\n            value={`${LANDLORDAMT}`}\n            disabled={true}\n          />\n        </div>\n\n        <div>\n          <StyledLabel width={\"200px\"} htmlFor=\"from-select\">\n            From Account:\n          </StyledLabel>\n          <StyledSelect\n            value={CHEQUINGACCOUNT}\n            id=\"from-select\"\n            disabled={true}\n          >\n            <option value={\"\"} hidden>\n              Choose Account\n            </option>\n            <option value={CHEQUINGACCOUNT}>{CHEQUINGACCOUNT}</option>\n            <option value={SAVINGSACCOUNT}>{SAVINGSACCOUNT}</option>\n          </StyledSelect>\n        </div>\n\n        <div>\n          <StyledLabel width={\"200px\"} htmlFor=\"secretQ\">\n            Security Question:\n          </StyledLabel>\n          <StyledTextInput\n            id=\"secretQ\"\n            type=\"text\"\n            value={SECRETQ}\n            disabled={true}\n          />\n        </div>\n\n        <div>\n          <StyledLabel width={\"200px\"} htmlFor=\"secretQ\">\n            Security Answer:\n          </StyledLabel>\n          <StyledTextInput\n            id=\"secretQ\"\n            type=\"text\"\n            value={SECRETA}\n            disabled={true}\n          />\n        </div>\n        <div>\n          <StyledLabel width={\"200px\"} htmlFor=\"secretQ\">\n            Message (optional):\n          </StyledLabel>\n          <StyledTextInput\n            id=\"secretQ\"\n            type=\"text\"\n            value={EXTRAMESSAGE}\n            disabled={true}\n          />\n        </div>\n\n        <div>\n          <StyledLabel width={\"200px\"} htmlFor=\"secretQ\">\n            Your information:\n          </StyledLabel>\n          <StyledTextInput\n            id=\"secretQ\"\n            type=\"text\"\n            value={\"heyitsme@email.com\"}\n            disabled={true}\n          />\n        </div>\n        <ContinueButtonContainer>\n          <InfoTip\n            tipContent={<div>Choose \"Send\"</div>}\n            showTip={isSend}\n            showButton={false}\n            tipTarget={\n              <ContinueButton\n                disabled={!isSend}\n                onClick={() => {\n                  setIntroContext({ isVisible: true, isIntro: false });\n                }}\n              >\n                Send\n              </ContinueButton>\n            }\n          />\n        </ContinueButtonContainer>\n      </FormContainer>\n    </InputContainer>\n  );\n};\n\nexport default VerifyETransfer;\n","import React from \"react\";\nimport { InfoTip } from \"../../../Shared/Tip\";\nimport styled from \"styled-components\";\nimport { ItemListing } from \"../../BankPageElements\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  accountPagesEnums,\n  overviewEnums,\n  overviewSteps,\n} from \"../../../enums\";\n\nconst SavingsInfo = () => {\n  const navigate = useNavigate();\n  const { activity, stepIndex } = useParams();\n  return (\n    <>\n      <ItemListing principal={\"Funds on Hold\"} details=\"$0.00\" />\n      <ItemListing principal={\"Overdraft Limit\"} details=\"$50.00\" />\n      <ItemListing principal={\"Available Funds\"} details=\"$500.00\" />\n      <ItemListing principal={\"Institution Number\"} details=\"554\" />\n      <ItemListing principal={\"Transit Number\"} details=\"55519\" />\n      <ItemListing principal={\"Account Number\"} details=\"444-4444\" />\n    </>\n  );\n};\n\nexport default SavingsInfo;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { InfoTip } from \"../../../Shared/Tip\";\nimport { BoldDiv, ItemListing } from \"../../BankPageElements\";\nimport {\n  accountPagesEnums,\n  overviewEnums,\n  overviewSteps,\n  transferFundsEnums,\n  transferFundsSteps,\n} from \"../../../enums\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { IntroModalContext } from \"../../../context\";\n\nconst FullEmptyDiv = styled.div`\n  width: 100%;\n  height: 10px;\n`;\n\nlet [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\nconst todayDate = `${day} ${month}, ${year}`;\n\nconst SavingsTransactions = () => {\n  const { activity, stepIndex } = useParams();\n  const navigate = useNavigate();\n  // const { introModalState, setIntroContext } = useContext(IntroModalContext);\n\n  const isConfirmIncrease =\n    transferFundsSteps[stepIndex] === transferFundsEnums.confirmSavingsIncrease;\n\n  return (\n    <>\n      {/* TODO: This should be step dependent */}\n      <InfoTip\n        tipContent={\n          <div>\n            Now you can see your savings account has $300 transferred to it from\n            your chequing’s account.\n          </div>\n        }\n        showTip={isConfirmIncrease}\n        onClick={() => {\n          navigate(\n            `/${activity}/${Number(stepIndex) + 1}/${\n              accountPagesEnums.ACCOUNTS\n            }/${accountPagesEnums.SAVINGSHOME}/${\n              accountPagesEnums.SAVINGSTRANSACTIONS\n            }`\n          );\n        }}\n        tipTarget={\n          <ItemListing\n            principal={\"Deposit 0000000261884\"}\n            date={todayDate}\n            trans={\"Transfer - Chequing\"}\n            details={\"+$300.00\"}\n            isPositive\n          />\n        }\n      />\n\n      <ItemListing\n        principal={\"Deposit 0000000261883\"}\n        date={\"5 Jan, 2020\"}\n        trans={\"Internet banking - deposit\"}\n        details={\"+$500.00\"}\n        isPositive\n      />\n    </>\n  );\n};\n\nexport default SavingsTransactions;\n","import React from \"react\";\nimport { Route, Routes, useParams } from \"react-router-dom\";\nimport AllActivities from \"./Activities\";\n\nimport BankHomepage, {\n  AccountRegistration,\n  SignIn,\n  Welcome,\n  PhoneVerification,\n  CreateEmail,\n} from \"./BankPages/BankHomepage\";\nimport NotFound from \"./NotFound\";\nimport {\n  accountPagesEnums,\n  bankPageEnums,\n  eTransferPagesEnums,\n  paymentPagesEnums,\n} from \"./enums\";\nimport {\n  AllAccounts,\n  CheckingHome,\n  CheckingInfo,\n  CheckingTransactions,\n  SavingsHome,\n  TransferFunds,\n} from \"./BankPages/Accounts/\";\nimport BasePage from \"./BankPages/BaseBankPage\";\nimport {\n  PaymentsHome,\n  ListOfPayees,\n  VerifyPayee,\n  AddBill,\n  VerifyBill,\n  AddPayee,\n} from \"./BankPages/Payments\";\n\nimport {\n  Contacts,\n  AddContact,\n  SendETransfer,\n  VerifyETransfer,\n} from \"./BankPages/ETransfer\";\nimport { SavingsInfo, SavingsTransactions } from \"./BankPages/Accounts/Savings\";\n\nfunction Activity(props) {\n  let { activity } = useParams();\n  let Act = AllActivities[activity];\n  return Act ? <Act /> : <NotFound />;\n}\n\nexport const AllRoutes = () => {\n  return (\n    <Routes>\n      <Route path={`/:activity/:stepIndex`} element={<Activity />}>\n        <Route path={bankPageEnums.BANKHOMEPAGE} element={<BankHomepage />}>\n          <Route path=\"\" element={<Welcome />} />\n          <Route\n            path={bankPageEnums.ACCOUNTREGISTRATION}\n            element={<AccountRegistration />}\n          />\n          <Route path={bankPageEnums.SIGNIN} element={<SignIn />} />\n          <Route\n            path={bankPageEnums.PHONEVERIFICATION}\n            element={<PhoneVerification />}\n          />\n          <Route path={bankPageEnums.CREATEEMAIL} element={<CreateEmail />} />\n        </Route>\n        {/* Here, ACCOUNTS just uses the base page */}\n        <Route path={accountPagesEnums.ACCOUNTS} element={<BasePage />}>\n          <Route path=\"\" element={<AllAccounts />} />\n          <Route\n            path={accountPagesEnums.TRANSFERFUNDS}\n            element={<TransferFunds />}\n          />\n          <Route\n            path={accountPagesEnums.CHECKINGHOME}\n            element={<CheckingHome />}\n          >\n            <Route\n              path={accountPagesEnums.CHECKINGINFO}\n              element={<CheckingInfo />}\n            />\n            <Route\n              path={accountPagesEnums.CHECKINGTRANSACTIONS}\n              element={<CheckingTransactions />}\n            />\n            <Route />\n          </Route>\n          <Route path={accountPagesEnums.SAVINGSHOME} element={<SavingsHome />}>\n            <Route\n              path={accountPagesEnums.SAVINGSINFO}\n              element={<SavingsInfo />}\n            />\n            <Route\n              path={accountPagesEnums.SAVINGSTRANSACTIONS}\n              element={<SavingsTransactions />}\n            />\n            <Route />\n          </Route>\n        </Route>\n        <Route path={paymentPagesEnums.PAYMENTSHOME} element={<BasePage />}>\n          <Route path={\"\"} element={<PaymentsHome />}>\n            <Route\n              path={paymentPagesEnums.LISTOFPAYEES}\n              element={<ListOfPayees />}\n            />\n            <Route path={paymentPagesEnums.ADDBILL} element={<AddBill />} />\n            <Route\n              path={paymentPagesEnums.VERIFYBILL}\n              element={<VerifyBill />}\n            />\n            <Route path={paymentPagesEnums.ADDPAYEE} element={<AddPayee />} />\n            <Route\n              path={paymentPagesEnums.VERIFYPAYEE}\n              element={<VerifyPayee />}\n            />\n          </Route>\n        </Route>\n        <Route path={eTransferPagesEnums.ETHOME} element={<BasePage />}>\n          <Route path={eTransferPagesEnums.ETCONTACTS} element={<Contacts />} />\n          <Route\n            path={eTransferPagesEnums.ETADDCONTACT}\n            element={<AddContact />}\n          />\n          <Route\n            path={eTransferPagesEnums.SENDETRANSFER}\n            element={<SendETransfer />}\n          />\n          <Route\n            path={eTransferPagesEnums.VERIFYETRANSFER}\n            element={<VerifyETransfer />}\n          />\n        </Route>\n      </Route>\n    </Routes>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\nimport ActivityChooser from \"./ActivityChooser\";\nimport { PageContainer, AllActivitiesButton } from \"./Shared/Layout\";\nimport { theme } from \"./Global\";\nimport { AllRoutes } from \"./routes\";\nimport {\n  ActivityModalContext,\n  IntroModalContext,\n  PaymentMethodsContext,\n} from \"./context\";\nimport { useLocation } from \"react-router-dom\";\n\nconst App = () => {\n  const location = useLocation();\n\n  const { activityModalIsVisible, setActivityContext } =\n    useContext(ActivityModalContext);\n\n  if (location.pathname === \"/\" && !activityModalIsVisible) {\n    setActivityContext(true);\n  }\n\n  return (\n    <PageContainer>\n      <AllRoutes />\n      <AllActivitiesButton\n        onClick={() => {\n          if (activityModalIsVisible) {\n            setActivityContext(false);\n          } else {\n            setActivityContext(true);\n          }\n        }}\n      >\n        {activityModalIsVisible ? \"Back To Activity\" : \"Show All Activities\"}\n      </AllActivitiesButton>\n      <ActivityChooser\n        closeModal={() => {\n          setActivityContext(false);\n        }}\n        visible={activityModalIsVisible}\n      />\n    </PageContainer>\n  );\n};\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  font-family: 'Poppins', sans-serif; \n  font-family: 'Noto Sans', sans-serif;\n  margin: 0;\n}\n\nh2 {\n  margin: 0;\n}\n\n#layers {\n  z-index: 100;\n}\n`;\n\nconst AppExport = () => {\n  // Intro Modal Context\n  const [introModalState, setIntroContext] = useState({\n    isVisible: false,\n    isIntro: true,\n  });\n  const introContextValue = { introModalState, setIntroContext };\n\n  // Activity Modal Context\n  const [activityModalIsVisible, setActivityContext] = useState(false);\n  const activityContextValue = { activityModalIsVisible, setActivityContext };\n\n  // Payment Methods Modal Context\n  // const [paymentMethodsIsVisible, setPaymentMethodsIsVisible] = useState(false);\n  // const paymentMethodsValue = {\n  //   paymentMethodsIsVisible,\n  //   setPaymentMethodsIsVisible,\n  // };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <ActivityModalContext.Provider value={activityContextValue}>\n        <IntroModalContext.Provider value={introContextValue}>\n          {/* <PaymentMethodsContext.Provider value={paymentMethodsValue}> */}\n          <App />\n          {/* </PaymentMethodsContext.Provider> */}\n        </IntroModalContext.Provider>\n      </ActivityModalContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default AppExport;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Bank from \"./Bank\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Bank />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/dark_flake.5fd7ece1.png\";","module.exports = __webpack_public_path__ + \"static/media/dark_flake_black.af5aad84.png\";","module.exports = __webpack_public_path__ + \"static/media/contract.12cf8c4f.png\";","module.exports = __webpack_public_path__ + \"static/media/piggy-bank.feb34bcb.png\";","module.exports = __webpack_public_path__ + \"static/media/exchange.d15b6ad9.png\";","module.exports = __webpack_public_path__ + \"static/media/coin.a5a3bfeb.png\";","module.exports = __webpack_public_path__ + \"static/media/plus.cf050959.png\";"],"sourceRoot":""}